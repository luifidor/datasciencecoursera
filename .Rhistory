panel.xyplot (x, y, ...)
panel.xyplot (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason)
, data = data,layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
#panel.xyplot (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason)
, data = data,layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.xyplot (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason)
, data = data,layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason)
, data = bidlog[bidlog$reason = "MINIBID" & bidlog$open_date_cy > 2014],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason)
, data = bidlog[bidlog$reason = "MINIBID" & bidlog$open_date_cy > 2014, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(x), lty =2)
panel.abline (h = mean(x), lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & count_processing_days <51, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline ( h= 30, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= 30, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= 21, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
#panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= 25, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
#panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= 25, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, xlabel = "Count of bid processing days"
, ylabel = "Percentage of discount"
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
#panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= 25, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, xlabel = "Count of bid processing days"
, ylabel = "Percentage of discount"
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
#panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= median(x), lty =1)
})
library(ggplot2)
str(mpg)
qplot (displ, hwy, data = mpg)
qplot(localdn_savings_rate, count_processing_days, data = bidlog, color = reason)
qplot(localdn_savings_rate, count_processing_days, data = bidlog[bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0], color = reason)
qplot(localdn_savings_rate, count_processing_days, data = bidlog[bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,], color = reason)
qplot(localdn_savings_rate, count_processing_days, data = bidlog[bidlog$reason == "MINIBID", bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,], color = member)
qplot(localdn_savings_rate, count_processing_days, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,], color = member)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,], color = member)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, color = member)
qplot(localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, fill = member)
qplot(count_processing_days, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, fill = member)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, facets = open_date_cy~ member)
str(maacs)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "COMPETTIIVE" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, facets = open_date_cy~ member)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "COMPETTIIVE" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, facets = open_date_cy ~ member)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "COMPETTIIVE" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, facets = open_date_cy ~ .)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "COMPETITIVE" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, facets = open_date_cy ~ member)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, facets = open_date_cy~ member)
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, xlabel = "Count of bid processing days"
, ylabel = "Percentage of discount"
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
#panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= median(x), lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, xlabel = "Count of bid processing days"
, ylabel = "Percentage of discount"
, data = bidlog[bidlog$reason == "COMPETITIVE" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
#panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= median(x), lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, xlabel = "Count of bid processing days"
, ylabel = "Percentage of discount"
, data = bidlog[bidlog$reason == "COMPETITIVE" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(1, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
#panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= median(x), lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, xlabel = "Count of bid processing days"
, ylabel = "Percentage of discount"
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
#panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= median(x), lty =1)
})
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, facets = open_date_cy~ member)
qplot(count_processing_days, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, fill = member)
qplot(localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = "density"
, fill = member)
qplot(count_processing_days, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, color = member)
qplot(localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = "density"
, color = member)
consolidated[, c("bid_id", "award.x")]
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "COMPETITIVE")
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "COMPETITIVE",])
library(ggplot2)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "COMPETITIVE",])
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",])
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",], shape = "member")
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",], shape = member)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",], color = member)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",]
, color = member, facets = .~member) + geom_smooth(methond = "lm")
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",]
, color = member, facets = .~member) + geom_smooth(method = "lm")
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",]
, color = member, facets = .~member) + geom_smooth(method = "loes")
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",]
, color = member, facets = .~member) + geom_smooth(method = "loess")
g <- ggplot(bidlog, aes(contract_savings_rate, localdn_savings_rate))
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth() + facet_grid(.~reason)
g <- ggplot(bidlog, aes(contract_savings_rate, localdn_savings_rate), xlim = c(0,1))
g + geom_point() + geom_smooth() + facet_grid(.~reason)
g <- ggplot(bidlog, aes(contract_savings_rate, localdn_savings_rate))
g + geom_point(xlim = c(0,1)) + geom_smooth() + facet_grid(.~reason)
g + geom_point(xlim = c(0,1)) + geom_smooth() + facet_grid(.~reason) + coord_cartesian(xlim = c(0, 1))
g + geom_point(xlim = c(0,1)) + geom_smooth() + facet_grid(reason~.) + coord_cartesian(xlim = c(0, 1))
g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(xlim = c(0, 1))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(xlim = c(0, 1))
g <- ggplot(bidlog, aes(count_processing_days,localdn_savings_rate))
g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(xlim = c(0, 1))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(xlim = c(0, 1))
g <- ggplot(bidlog, aes(count_processing_days,localdn_savings_rate))
g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g <- ggplot(bidlog, aes(count_processing_days,localdn_savings_rate))
g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth()
+ labs(title = "Processing days vs savings")
+ labs(y = expression("Local" * ["DNAC"]), x = "Count processing days")
+ facet_grid(member~.)
+ coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g <- ggplot(bidlog, aes(count_processing_days,localdn_savings_rate))
g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth()
+ labs(title = "Processing days vs savings")
+ labs(y = expression("Local DNAC", x = "Count processing days")
+ facet_grid(member~.)
+ coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
)
g <- ggplot(bidlog, aes(count_processing_days,localdn_savings_rate))
g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth()
+ labs(title = "Processing days vs savings")  + labs(y = "Local DNAC", x = "Count processing days")
+ facet_grid(member~.)
+ coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth()
+ labs(title = "Processing days vs savings")  + labs(y = "Local DNAC", x = "Count processing days")
+ facet_grid(member~.)
+ coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
+ coord_cartesian(ylim = c(0, 1))
+ coord_cartesian(ylim = c(0, 1))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth()
+ labs(title = "Processing days vs savings")  + labs(y = "Local DNAC", x = "Count processing days")
+ facet_grid(member~.)
g <- ggplot(bidlog, aes(count_processing_days,localdn_savings_rate))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth()
+ labs(title = "Processing days vs savings")  + labs(y = "Local DNAC", x = "Count processing days")
+ facet_grid(member~.)
+ coord_cartesian(ylim = c(0, 1))
g + geom_point(aes(color = reason), size = 4, alpha =1/2)
+ geom_smooth()
geom_smooth()
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth()
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth() + labs(title = "Processing days vs savings") + labs(y = "Local DNAC", x = "Count processing days")  + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth() + labs(title = "Processing days vs savings") + labs(y = "Local DNAC", x = "Count processing days")  + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim = c(0,60))
g <- ggplot(bidlog, aes(count_processing_days))
#g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth() + labs(title = "Processing days vs savings") + labs(y = "Local DNAC", x = "Count processing days")  + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim = c(0,60))
g <- ggplot(bidlog, aes(count_processing_days))
#g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + labs(title = "Processing days vs savings") + labs(y = "Local DNAC", x = "Count processing days")  + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim = c(0,60))
g <- ggplot(bidlog, aes(count_processing_days))
#g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g + geom_fill(aes(color = reason), size = 4, alpha =1/2) + labs(title = "Processing days vs savings") + labs(y = "Local DNAC", x = "Count processing days")  + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim = c(0,60))
g <- ggplot(bidlog, aes(count_processing_days))
#g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g + geom_histogram(aes(color = reason), size = 4, alpha =1/2) + labs(title = "Processing days vs savings") + labs(y = "Local DNAC", x = "Count processing days")  + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim = c(0,60))
g <- ggplot(bidlog, aes(count_processing_days,localdn_savings_rate))
#g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth() + labs(title = "Processing days vs savings") + labs(y = "Local DNAC", x = "Count processing days")  + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim = c(0,60))
g <- ggplot(bidlog, aes(num_players_over_5perc,localdn_savings_rate))
#g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth() + labs(title = "Processing days vs savings") + labs(y = "Local DNAC", x = "Count processing days")  + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim = c(0,60))
g <- ggplot(bidlog, aes(num_players_over_5perc,localdn_savings_rate))
#g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth() + labs(title = "Processing days vs savings") + labs(y = "Local DNAC", x = "Count processing days")  + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim = c(0,10))
g <- ggplot(bidlog, aes(factor(num_players_over_5perc),localdn_savings_rate))
#g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth() + labs(title = "Processing days vs savings") + labs(y = "Local DNAC", x = "Count processing days")  + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim = c(0,10))
g <- ggplot(bidlog[bidlog$reason == "MINIBID",], aes(factor(num_players_over_5perc),localdn_savings_rate))
#g + geom_point(color = "steelblue", size = 4, alpha =1/2) + geom_smooth() + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim =c(0,50))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth() + labs(title = "Processing days vs savings") + labs(y = "Local DNAC", x = "Count processing days")  + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim = c(0,10))
g + geom_point(aes(color = reason), size = 4, alpha =1/2) + geom_smooth() + labs(title = "Processing days vs savings") + labs(y = "Local DNAC", x = "Count processing days")  + facet_grid(member~.) + coord_cartesian(ylim = c(0, 1), xlim = c(0,10)) + theme_bw(base_family = "Times")
cutpoint <- quantile(bidlog$localdn_savings_rate, seq(0,1, length = 4), na.rm = TRUE)
bidlog$f_savings <- cut(bidlog$localdn_savings_rate, cutpoints)
bidlog$f_savings <- cut(bidlog$localdn_savings_rate, cutpoint)
levels(bidlog$f_savings)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(votes, rating, data = movies, smooth = "loess")
library(ggplot2)
str(mpg)
qplot (displ, hwy, data = mpg)
qplot (displ, hwy, data = mpg, smooth = "loess")
qplot (displ, hwy, data = mpg, stats_smooth = "loess")
qplot (displ, hwy, data = mpg) + geom_smooth("loess")
qplot (displ, hwy, data = mpg, panel = panel.loess)
qplot (displ, hwy, data = mpg) + stat_smooth("loess")
qplot (displ, hwy, data = mpg, smooth("loess"))
qplot (displ, hwy, data = mpg, smooth = "loess")
qplot (displ, hwy, data = mpg) + geom_smooth()
?lm
?loess
?anova
anova(lm(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",]))
lm(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",])
lm(,count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",])
lm(x=count_processing_days, y=localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",])
lm( data = bidlog[bidlog$reason == "MINIBID",], x=count_processing_days, y=localdn_savings_rate)
cor(bidlog[bidlog$reason == "MINIBID",]$count_processing_days, bidlog[bidlog$reason == "MINIBID",]$ocaldn_savings_rate)
cor(x=bidlog[bidlog$reason == "MINIBID",]$count_processing_days, y=bidlog[bidlog$reason == "MINIBID",]$localdn_savings_rate)
corr(x=bidlog[bidlog$reason == "MINIBID",]$count_processing_days, y=bidlog[bidlog$reason == "MINIBID",]$localdn_savings_rate)
?cor
inc <- subset(bidline, offer_type == "Inc")
offers <- subset(bidline, offer_type == "Offer" & award == 0)
awards <- subset(bidline, award >= 0.75)
inc <- subset(bidline, offer_type == "Inc", select = c(bid_id, member, vendor, award, ndc, indirect_cost, contract_cost, locadn_cost, allindn_cost, scenario, item_num, offer_id, annual_qty))
inc <- subset(bidline, offer_type == "Inc", select = c(bid_id, member, vendor, award, ndc, indirect_cost, contract_cost, locadn_cost, allindn_cost, scenario, item_num, offerid, annual_qty))
colnames(inc) <- paste("inc", colnames(inc), sep = '_')
head(inc)
View(bidlog)
#retrieve all incumbent lines
inc <- subset(bidline, offer_type == "Inc", select = c(bid_id, snapshot, member, vendor, award, ndc, indirect_cost, contract_cost, locadn_cost, allindn_cost, scenario, item_num, offerid, annual_qty))
colnames(inc) <- paste("inc", colnames(inc), sep = '_')
#retrieve all offers lines
offers <- subset(bidline, offer_type == "Offer" & award == 0, select = c(bid_id, snapshot, member, vendor, award, ndc, indirect_cost, contract_cost, locadn_cost, allindn_cost, scenario, item_num, offerid, annual_qty))
colnames(offers) <- paste("offer", colnames(offers), sep = '_')
#retrieve all award lines
awards <- subset(bidline, award >= 0.75, select = c(bid_id, snapshot, member, vendor, award, ndc, indirect_cost, contract_cost, locadn_cost, allindn_cost, scenario, item_num, offerid, annual_qty))
colnames(awards) <- paste("awards", colnames(awards), sep = '_')
lines_merged <- merge(offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost")], by.x=c("inc_bid_id", "inc_item_num"), by.y=c("offer_bid_id", "offer_item_num"))
lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost")], by.x=c("inc_bid_id", "inc_item_num"), by.y=c("offer_bid_id", "offer_item_num"))
lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.x=c("inc_bid_id", "inc_item_num"), by.y=c("offer_bid_id", "offer_item_num"))
lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.y
(lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.y = c("inc_bid_id", "inc_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
(lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.y = c("inc_bid_id", "inc_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
(lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.y = c("inc_bid_id", "inc_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.y = c("inc_bid_id", "inc_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.y = c("inc_bid_id", "inc_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
lines_merged <- merge.data.frame (offers, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.y = c("inc_bid_id", "inc_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
head(lines_merge,5)
head(lines_merged,5)
awards <- subset(bidline, award >= 0.75, select = c(bid_id, snapshot, member, line_type, vendor, award, ndc, indirect_cost, contract_cost, locadn_cost, allindn_cost, scenario, item_num, offerid, annual_qty))
colnames(awards) <- paste("aw", colnames(awards), sep = '_')
lines_awarded <- merge.data.frame (lines_merged, award[, c("aw_ndc", "aw_vendor", "aw_award", "aw_indirect_cost", "aw_contract_cost", "aw_locadn_cost", "aw_allindn_cost", "aw_bid_id", "aw_item_num")], by.y = c("aw_bid_id", "aw_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
lines_awarded <- merge.data.frame (lines_merged, awards[, c("aw_ndc", "aw_vendor", "aw_award", "aw_indirect_cost", "aw_contract_cost", "aw_locadn_cost", "aw_allindn_cost", "aw_bid_id", "aw_item_num")], by.y = c("aw_bid_id", "aw_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
offer_lowest_allincost <- subset(lines_awarded, award == 0 & allindn_cost < aw_allindn_cost)
offer_lowest_allincost <- subset(lines_awarded, offer_award == 0 & offer_allindn_cost < aw_allindn_cost)
head(offer_lowest_allincost)
diff <-  offer_lowest_allincost$aw_allindn_cost -  offer_lowest_allincost$offer_allindn_cost
value <- offer_lowest_allincost$annual_qty * diff
consolidated <- cbind(offer_lowest_allincost, diff = as.data.frame(diff), diff_Value = as.data.frame(value))
consolidated <- cbind(offer_lowest_allincost, as.data.frame(diff), as.data.frame(value))
length(diff)
length(value)
value <- offer_lowest_allincost$offers_annual_qty * diff
length(value)
value <- offer_lowest_allincost$offer_annual_qty * diff
length(value)
consolidated <- cbind(offer_lowest_allincost, as.data.frame(diff), as.data.frame(value))
consolidated <- cbind(offer_lowest_allincost, as.data.frame(diff), value = as.data.frame(value))
consolidated <- cbind(offer_lowest_allincost, diff = as.data.frame(diff), value = as.data.frame(value))
plot(value)
hist(value)
hist(value, breaks = 100)
hist(value, breaks = 100, xlim = c(0, 1e6))
hist(value, breaks = 300, xlim = c(0, 1e6))
hist(value, breaks = 500, xlim = c(0, 1e6))
hist(value, breaks = 1000, xlim = c(0, 1e6))
hist(value, breaks = 2000, xlim = c(0, 1e6))
hist(value, breaks = 2000, xlim = c(0, 1e6))
consolidated[order(consolidated, -consolidated$value),]
consolidated[order(-consolidated$value),]
consolidated[order(-consolidated$value),c("offer_bid_id", "snapshot", "offer_allindn_cost", "aw_allindn_cost")]
consolidated[order(-consolidated$value),c("offer_bid_id", "inc_snapshot", "offer_allindn_cost", "aw_allindn_cost")]
consolidated[order(-consolidated$value), c("inc_bid_id", "inc_snapshot", "offer_allindn_cost", "aw_allindn_cost")]
consolidated[order(-consolidated$value), c("inc_bid_id", "offer_snapshot", "offer_allindn_cost", "aw_allindn_cost")]
consolidated[order(-consolidated$value), c("offer_bid_id", "offer_snapshot", "offer_allindn_cost", "aw_allindn_cost")]
consolidated[order(-consolidated$value), c("offer_bid_id", "offer_snapshot", "offer_allindn_cost", "aw_allindn_cost", "value")]
consolidated[order(-consolidated$value), c("offer_bid_id", "offer_snapshot", "offer_allindn_cost", "aw_allindn_cost", "value", "offer_vendor", "aw_vendor")]
set.seed(12345)
par(mar = rep(0.2,4))
dataMatrix <- matrix(rnorm(400), nrow = 40)
image(1:30, 1:40, t(dataMatrix) [, nrow(dataMatrix):1]
)
# Lesson 3: Dimension Reduction (part 1)
set.seed(12345)
par(mar = rep(0.2,4))
dataMatrix <- matrix(rnorm(400), nrow = 40)
image(1:30, 1:40, t(dataMatrix) [, nrow(dataMatrix):1])
set.seed(12345)
par(mar = rep(0.2,4))
dataMatrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(dataMatrix) [, nrow(dataMatrix):1])
dataMatrix
heatmap(dataMatrix)
rep(c(0,3), each = 5)
heatmap(dataMatrix) #shows no pattern
##Add pattern to the matrix
set.seed(678910)
for(i in 1:40) {
# flip a coin
coinFlip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a common pattern to that row
if (coinFlip) {
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0,3), each = 5)
}
}
heatmap(dataMatrix) #shows no pattern
hh <- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order,]
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
reset_par()
hh <- hclust(dist(dataMatrix)) ## cluster analysis hierar
dataMatrixOrdered <- dataMatrix[hh$order,]
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
nrow(dataMatrixOrdered)
sdv1 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered)]:1)
plot(svd1$u[,1], 40:1, , xlab = "Row", ylab = "First left singular vector"), pch  = 19)
plot(svd1$v[,1], xlab = "Column", ylab = "First right singular vector", pch = 19)
sdv1 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered)]:1)
plot(svd1$u[,1], 40:1, , xlab = "Row", ylab = "First left singular vector", pch  = 19)
plot(svd1$v[,1], xlab = "Column", ylab = "First right singular vector", pch = 19)
plot(sdv1$u[,1], 40:1, , xlab = "Row", ylab = "First left singular vector", pch  = 19)
plot(sdv1$v[,1], xlab = "Column", ylab = "First right singular vector", pch = 19)
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered)]:1)
sdv1 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered)]:1)
plot(sdv1$u[,1], 40:1, , xlab = "Row", ylab = "First left singular vector", pch  = 19)
plot(sdv1$v[,1], xlab = "Column", ylab = "First right singular vector", pch = 19)
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered):1])
par(mfrow = c(1,2))
plot(sdv1$d, xlab = "Column", ylab = "Singular value", pch = 19)
plot(sdv1$d^2/sum(sdv1$d^2), xlab = "Column", ylab = "Singular value", pch = 19)
sdv1 <- svd(scale(dataMatrixOrdered))
pca1 <- prcomp(dataMatrixOrdered, scale = TRUE)
plot(pca1$rotation[,1], svd1$v[,1], pch = 19, xlab = "Principal Component 1", ylab = "Right Singular Vector 1")
sdv1 <- sdv(scale(dataMatrixOrdered))
pca1 <- prcomp(dataMatrixOrdered, scale = TRUE)
plot(pca1$rotation[,1], sdv1$v[,1], pch = 19, xlab = "Principal Component 1", ylab = "Right Singular Vector 1")
## Relationship to principal components
sdv1 <- svd(scale(dataMatrixOrdered))
pca1 <- prcomp(dataMatrixOrdered, scale = TRUE)
plot(pca1$rotation[,1], sdv1$v[,1], pch = 19, xlab = "Principal Component 1", ylab = "Right Singular Vector 1")
abline(c(0,1))
rep(c(0,5), 5)
library(impute)
scale(bidlog$award_localdn_var)
