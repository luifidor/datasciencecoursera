qplot(count_processing_days, localdn_savings_rate, data = data, ylim ylim = c(0,1))
qplot(count_processing_days, localdn_savings_rate, data = data, ylim = c(0,1))
with(bidlog, plot(localdn_savings_rate, open_date_cy))
with(bidlog, plot(open_date_cy, localdn_savings_rate))
with(bidlog, plot(open_date_cy, localdn_savings_rate, ylim=c(0, 1))
with(bidlog, plot(open_date_cy, localdn_savings_rate, ylim=c(0, 1)))
with(bidlog, plot(open_date_cy, localdn_savings_rate, ylim=c(0, 1)))
with(bidlog, plot(open_date_cy, localdn_savings_rate, ylim=c(0, 2)))
transform(bidlog, year = factor(open_date_cy))
transform(bidlog, open_date_cy = factor(open_date_cy))
boxplot (localdn_savings_rate ~ open_date_cy, bidlog, xlab = "Calendar Year", ylab = "Savings rate" )
boxplot (localdn_savings_rate ~ open_date_cy, bidlog, xlab = "Calendar Year", ylab = "Savings rate", ylim = c(0,1) )
boxplot (localdn_savings_rate ~ interaction(member, open_date_cy), bidlog, xlab = "Calendar Year", ylab = "Savings rate", ylim = c(0,1) )
boxplot (localdn_savings_rate ~ interaction(member, open_date_cy), subset(bidlog, member == "ABC" | member == "WAG", xlab = "Calendar Year", ylab = "Savings rate", ylim = c(0,1) )
boxplot (localdn_savings_rate ~ interaction(member, open_date_cy), subset(bidlog, member == "ABC" | member == "WAG"), xlab = "Calendar Year", ylab = "Savings rate", ylim = c(0,1) )
boxplot (localdn_savings_rate ~ interaction(member, open_date_cy), subset(bidlog, member == "ABC" | member == "WAG"), xlab = "Calendar Year", ylab = "Savings rate", ylim = c(0,1) )
abline)(h = 0.1)
abline(h = 0.1)
aggregate(x ~ member + open_date_cy, data = bidlog, FUN = length
aggregate(x ~ member + open_date_cy, data = bidlog, FUN = length)
aggregate(x ~ member + open_date_cy, data = bidlog, FUN = length)
aggregate(interaction(member, open_date_cy), data = bidlog, FUN = length)
aggregate(interaction(bidlog$member, bidlog$open_date_cy), data = bidlog, FUN = length)
library(data.table)
DT <- data.table(bidlog)
DT[,.N, by = list(open_date_cy, member)]
DT <- data.table(subset(bidlog, member == "ABC" | member == "WAG"))
DT[,.N, by = list(open_date_cy, member)]
with(bidlog, plot(open_date_cy, localdn_savings_rate, ylim=c(0, 2)))
with(bidlog, plot(count_processing_days, localdn_savings_rate, ylim=c(0, 2)))
with(subset(bidlog, member =="ABC"), points(count_processing_days, localdn_savings_rate, col = "blue"))
with(bidlog, plot(count_processing_days, localdn_savings_rate, ylim=c(0, 2), type ="n"))
with(subset(bidlog, member =="ABC" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "blue"))
with(subset(bidlog, member =="WAG" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "red"))
legend("topright", pch = 1, col = c("blue", "red", legend = c("ABC", "WAG")))
with(bidlog, plot(count_processing_days, localdn_savings_rate, ylim=c(0, 2), xlim = c(0,50), type ="n"))
with(subset(bidlog, member =="ABC" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "blue"))
with(subset(bidlog, member =="WAG" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "red"))
legend("topright", pch = 1, col = c("blue", "red", legend = c("ABC", "WAG")))
library(gridExtra)
x <- DT[,.N, by = list(open_date_cy, member)]
ss <- tableGrob(x)
grid.arrange(ss)
order(x$open_date_cy, x$member)
ss <- tableGrob(x[order(x$open_date_cy, x$member)])
grid.arrange(ss)
with(bidlog, plot(count_processing_days, localdn_savings_rate, ylim=c(0, 2), xlim = c(0,50), type ="n"))
with(subset(bidlog, member =="ABC" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "blue", pch = 20))
with(subset(bidlog, member =="WAG" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "red", pch = 20))
legend("topright", pch = 1, col = c("blue", "red", legend = c("ABC", "WAG")))
with(bidlog, plot(count_processing_days, localdn_savings_rate, ylim=c(0, 2), xlim = c(0,50), type ="n"))
with(subset(bidlog, reason == "MINIBID" & member =="ABC" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "blue", pch = 20))
with(subset(bidlog, reason == "MINIBID" & member =="WAG" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "red", pch = 20))
legend("topright", pch = 1, col = c("blue", "red", legend = c("ABC", "WAG")))
with(bidlog, plot(count_processing_days, localdn_savings_rate, ylim=c(0, 2), xlim = c(0,50), type ="n"))
with(subset(bidlog, reason == "MINIBID" & member =="ABC" & open_date_cy == 2016), points(count_processing_days, localdn_savings_rate, col = "blue", pch = 20))
with(subset(bidlog, reason == "MINIBID" & member =="WAG" & open_date_cy == 2016), points(count_processing_days, localdn_savings_rate, col = "red", pch = 20))
legend("topright", pch = 1, col = c("blue", "red", legend = c("ABC", "WAG")))
legend("topright", pch = 1, col = c("blue", "red"), legend = c("ABC", "WAG"))
legend("topright", pch = 20, col = c("blue", "red"), legend = c("ABC", "WAG"))
model <- lm(count_processing_days ~ localdn_savings_rate, bidlog)
model
abline(model, lwd = 2)
with(bidlog, plot(count_processing_days, localdn_savings_rate, ylim=c(0, 2), xlim = c(0,50), type ="n"))
with(subset(bidlog, reason == "MINIBID" & member =="ABC" & open_date_cy == 2016), points(count_processing_days, localdn_savings_rate, col = "blue", pch = 20))
with(subset(bidlog, reason == "MINIBID" & member =="WAG" & open_date_cy == 2016), points(count_processing_days, localdn_savings_rate, col = "red", pch = 20))
model <- lm(count_processing_days ~ localdn_savings_rate, bidlog)
abline(model, lwd = 2)
model <- lm(count_processing_days ~ localdn_savings_rate, subset(bidlog, reason == "MINIBID" & member =="WAG" & open_date_cy == 2016)
abline(model, lwd = 2)
model <- lm(count_processing_days ~ localdn_savings_rate, subset(bidlog, reason == "MINIBID" & member =="WAG" & open_date_cy == 2016))
abline(model, lwd = 2)
legend("topright", pch = 20, col = c("blue", "red"), legend = c("ABC", "WAG"))
abline(model, lwd = 2)
plot(model)
cn <-odbcDriverConnect("driver=SQL Server;server=tcp:swbbesqlp01.wbad.group,1434;database=minibid; uid=wbad_report; pwd=Wbad2016")
bidlog <- sqlFetch(cn, 'fact.bidanalysis_line_detail', colnames=FALSE,
rows_at_time=1000)
cn <-odbcDriverConnect("driver=SQL Server;server=tcp:swbbesqlp01.wbad.group,1434;database=minibid; uid=wbad_report; pwd=Wbad2016")
bidlog <- sqlFetch(cn, 'fact.bidlog', colnames=FALSE,
rows_at_time=1000)
bidline <- sqlFetch(cn, 'fact.bidanalysis_line_detail', colnames=FALSE,
rows_at_time=1000)
summary(bidline$vendor)
par(mfrow = c(1, 3), mar =c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(bidlog, {
plot (localdn_savings_rate, open_date_cy_month, main = "DNAC Savings per month")
plot (contract_savings_rate, open_date_cy_month, main = "Contract Savings per month")
plot (count_processing_days, open_date_cy_month, main ="Processing Days")
mtext ("Bidlog analysis", outer = TRUE)
})
par(mfrow = c(1, 3), mar =c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(bidlog, {
plot (localdn_savings_rate, open_date_cy, main = "DNAC Savings per month")
plot (contract_savings_rate, open_date_cy, main = "Contract Savings per month")
plot (count_processing_days, open_date_cy, main ="Processing Days")
mtext ("Bidlog analysis", outer = TRUE)
})
par(mfrow = c(1, 3), mar =c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(bidlog, {
plot (open_date_cy, localdn_savings_rate, main = "DNAC Savings per month", ylim = c(0,1))
plot (open_date_cy, contract_savings_rate, open_date_cy, main = "Contract Savings per month", ylim = c(0,1))
plot (open_date_cy, count_processing_days, open_date_cy, main ="Processing Days", ylim = c(0,1))
mtext ("Bidlog analysis", outer = TRUE)
})
par(mfrow = c(1, 3), mar =c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(bidlog, {
plot (open_date_cy, localdn_savings_rate, main = "DNAC Savings per month", ylim = c(0,1))
plot (open_date_cy, contract_savings_rate, open_date_cy, main = "Contract Savings per month", ylim = c(0,1))
plot (open_date_cy, count_processing_days, open_date_cy, main ="Processing Days", ylim = c(0,1))
mtext ("Bidlog analysis", outer = TRUE)
})
par(mfrow = c(1, 3), mar =c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(bidlog, {
plot (open_date_cy, localdn_savings_rate, main = "DNAC Savings per month", ylim = c(0,1))
plot (open_date_cy, contract_savings_rate, open_date_cy, main = "Contract Savings per month", ylim = c(0,1))
plot (open_date_cy, count_processing_days, open_date_cy, main ="Processing Days")
mtext ("Bidlog analysis", outer = TRUE)
})
par(mfrow = c(1, 3), mar =c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(bidlog, {
plot (open_date_cy, localdn_savings_rate, main = "DNAC Savings per month", ylim = c(0,1))
plot (open_date_cy, contract_savings_rate, main = "Contract Savings per month", ylim = c(0,1))
plot (open_date_cy, count_processing_days, main ="Processing Days")
mtext ("Bidlog analysis", outer = TRUE)
})
length(bidlines)
nrows(bidlines)
nrow(bidlines)
nrow(bidline)
levels(factor(bidline$bid_id))
bid_ids <- levels(factor(bidline$bid_id))
levels(bidline$offer_type)
bid_ids <- levels(factor(bidline$bid_id))
for (id in bid_ids) {
b <- subset(bidline, bid_id == id)
for (i in 1:nrow(b)) {
if (tolower(b[i, ]$offer_type) == "inc" ) {
inc <- rbind(inc, b[i, ])
} else if (tolower(b[i, ]$offer_type) == "offer") {
offer <- rbind(offer, b[i, ])
}
}
}
append_row <- function(vector, row) {
if (is.null(vector)) {
vector <- row
} else {
rbind(vector, row)
}
}
append_row <- function(vector, row) {
if (is.null(vector)) {
vector <- row
} else {
rbind(vector, row)
}
}
bid_ids <- levels(factor(bidline$bid_id))
for (id in bid_ids) {
b <- subset(bidline, bid_id == id)
for (i in 1:nrow(b)) {
if (tolower(b[i, ]$offer_type) == "inc" ) {
inc <- append_row(inc, b[i, ])
} else if (tolower(b[i, ]$offer_type) == "offer") {
offer <- append_row(offer, b[i, ])
}
}
}
bid_ids <- levels(factor(bidline$bid_id))
offer <- NULL
inc <- NULL
for (id in bid_ids) {
b <- subset(bidline, bid_id == id)
for (i in 1:nrow(b)) {
if (tolower(b[i, ]$offer_type) == "inc" ) {
inc <- append_row(inc, b[i, ])
} else if (tolower(b[i, ]$offer_type) == "offer") {
offer <- append_row(offer, b[i, ])
}
}
}
offer
inc
inc <- subset(bidline, offer_type == "inc")
offer <- subset(bidline, offer_type == "offer")
lines_merged <- merge(offer, inc, by =c("bid_id", "item_num"))
lines_merged <- merge(offer, inc[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "localdn_cost", "allindn_cost")], by =c("bid_id", "item_num"))
inc[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "localdn_cost", "allindn_cost")]
inc[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "locadn_cost", "allindn_cost")]
inc <- subset(bidline, offer_type == "inc")
inc[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "locadn_cost", "allindn_cost")]
lines_merged <- merge(offer, inc[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "locadn_cost", "allindn_cost")], by =c("bid_id", "item_num"))
lines_merged <- merge(offer, inc[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "locadn_cost", "allindn_cost", "bid_id", "item_num")], by =c("bid_id", "item_num"))
View(bidlog)
View(lines_merged)
View(lines_merged)
View(lines_merged)
View(m)
View(r)
subset(bidline, offer_type == "offer")
inc <- subset(bidline, offer_type == "Inc")
offer <- subset(bidline, offer_type == "Offer")
lines_merged <- merge(offer, inc[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "locadn_cost", "allindn_cost", "bid_id", "item_num")], by =c("bid_id", "item_num"))
View(lines_merged)
View(data)
award <- subset(bidline, award >= 0.75)
lines_awarded <- merge(lines_merged, award, by =c("bid_id", "item_num"))
lines_awarded <- merge(lines_merged, award[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "locadn_cost", "allindn_cost", "bid_id", "item_num")], by =c("bid_id", "item_num"))
View(bidlog)
View(lines_awarded)
subset(lines_awarded, award == 0 & locadn < x.allin_cost)
subset(lines_awarded, award == 0 & locadn_cost < x.allin_cost)
subset(lines_awarded, award == 0 & locadn_cost < allin_cost.x)
subset(lines_awarded, award == 0 & locadn_cost < allidn_cost.x)
subset(lines_awarded, award == 0 & locadn_cost < x.allidn_cost)
subset(lines_awarded, award == 0 & locadn_cost < allindn_cost.x)
subset(lines_awarded, award.x == 0 & locadn_cost < allindn_cost.x)
analysis <- subset(lines_awarded, award.x == 0 & locadn_cost < allindn_cost.x)
head(analyis, 1)
head(analysis, 1)
analysis <- subset(lines_awarded, award.x == 0 & allindn_cost > allindn_cost.x)
analysis
analysis$bid_id
levels(factor(analysis$bid_id))
View(bidline)
sapply (analysis, function(x) {
diff <-  x$allindn_cost -  x$allindn_cost.x #awarded cost - lowest offer cost
value <- x$annual_qty * diff
cbind(x, diff, value)
})
diff <-  analysis$allindn_cost -  analysis$allindn_cost.x
value <- x$annual_qty * diff
consolidated <- cbind(analysis, diff, value)
value
value <- analysis$annual_qty * diff
consolidated <- cbind(analysis, diff, value)
head(consolidated[order(consolidated, value),], 1)
consolidated[order(consolidated, value),]
consolidated
head(consolidated[order(consolidated, consolidated$value),], 1)
length(consolidated)
length(value)
length(diff)
length(value)
length(analysis)
analysis <- subset(lines_awarded, award.x == 0 & allindn_cost > allindn_cost.x)
length(analysis)
diff <-  analysis$allindn_cost -  analysis$allindn_cost.x
length(diff)
analysis <- subset(lines_awarded, award.x == 0 & allindn_cost > allindn_cost.x)
lines_awarded <- merge(lines_merged, award[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "locadn_cost", "allindn_cost", "bid_id", "item_num")], by =c("bid_id", "item_num"))
analysis <- subset(lines_awarded, award.x == 0 & allindn_cost > allindn_cost.x)
length(analysis)
analysis <- subset(lines_awarded, award.x == 0 & allindn_cost > allindn_cost.x)
analysis$allindn_cost -  analysis$allindn_cost.x
analysis$allindn_cost
analysis
analysis
length(analysis)
consolidated <- cbind(analysis, as.data.frame(diff),as.data.frame(value))
consolidated
head(consolidated[order(consolidated, consolidated$value),], 1)
length(diff)
length(value)
length(analysis)
head(consolidated[order(consolidated,value),], 1)
head(consolidated[order(value),], 1)
head(consolidated[order(value),"value"], 1)
head(consolidated[order(value, descresing = TRUE),"value"], 1)
head(consolidated[order(value, descending = TRUE),"value"], 1)
head(consolidated[order(-value),"value"], 1)
head(consolidated[order(-value),"value"], "bid_id")
head(consolidated[order(-value),"bid_id"], 1)
consolidated
View(consolidated)
reset_par()
library(lattice)
xyplot(award_localdn_var  ~ count_processing_days  | member, data = data, layout = c(2, 1))
xyplot(award_localdn_var  ~ count_processing_days  | member * reason, data = data, layout = c(2, 1))
xyplot(localdn_savings_rate  ~ count_processing_days  | member * reason, data = data, layout = c(2, 1))
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason), data = data, layout = c(2, 1))
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason), data = data, layout = c(4, 4))
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason), data = data, layout = c(2, 4), ylim = c(0, 1))
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason)
, data = data,layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.xyplot (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason)
, data = data,layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
#panel.xyplot (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason)
, data = data,layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.xyplot (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason)
, data = data,layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason)
, data = bidlog[bidlog$reason = "MINIBID" & bidlog$open_date_cy > 2014],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason)
, data = bidlog[bidlog$reason = "MINIBID" & bidlog$open_date_cy > 2014, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(x), lty =2)
panel.abline (h = mean(x), lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & count_processing_days <51, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 2), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline ( h= 30, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= 30, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= 21, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
#panel.abline (h = median(y), lty =2)
panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= 25, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
#panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= 25, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, xlabel = "Count of bid processing days"
, ylabel = "Percentage of discount"
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
#panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= 25, lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, xlabel = "Count of bid processing days"
, ylabel = "Percentage of discount"
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
#panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= median(x), lty =1)
})
library(ggplot2)
str(mpg)
qplot (displ, hwy, data = mpg)
qplot(localdn_savings_rate, count_processing_days, data = bidlog, color = reason)
qplot(localdn_savings_rate, count_processing_days, data = bidlog[bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0], color = reason)
qplot(localdn_savings_rate, count_processing_days, data = bidlog[bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,], color = reason)
qplot(localdn_savings_rate, count_processing_days, data = bidlog[bidlog$reason == "MINIBID", bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,], color = member)
qplot(localdn_savings_rate, count_processing_days, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,], color = member)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,], color = member)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, color = member)
qplot(localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, fill = member)
qplot(count_processing_days, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, fill = member)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, facets = open_date_cy~ member)
str(maacs)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "COMPETTIIVE" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, facets = open_date_cy~ member)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "COMPETTIIVE" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, facets = open_date_cy ~ member)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "COMPETTIIVE" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, facets = open_date_cy ~ .)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "COMPETITIVE" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, facets = open_date_cy ~ member)
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, facets = open_date_cy~ member)
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, xlabel = "Count of bid processing days"
, ylabel = "Percentage of discount"
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
#panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= median(x), lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, xlabel = "Count of bid processing days"
, ylabel = "Percentage of discount"
, data = bidlog[bidlog$reason == "COMPETITIVE" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
#panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= median(x), lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, xlabel = "Count of bid processing days"
, ylabel = "Percentage of discount"
, data = bidlog[bidlog$reason == "COMPETITIVE" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(1, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
#panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= median(x), lty =1)
})
xyplot(localdn_savings_rate  ~ count_processing_days  | factor(member) * factor(reason) * factor(open_date_cy)
, xlabel = "Count of bid processing days"
, ylabel = "Percentage of discount"
, data = bidlog[bidlog$reason == "MINIBID" & bidlog$open_date_cy > 2014 & bidlog$count_processing_days <51, ],layout = c(2, 3), ylim = c(0, 1), panel =function(x, y, ...) {
panel.xyplot (x, y, ...)
panel.abline (h = median(y), lty =2)
#panel.abline (h = mean(y), lty =1)
panel.lmline (x, y, col = 2, lty =1)
panel.abline (v= median(x), lty =1)
})
qplot(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = c("point", "smooth")
, facets = open_date_cy~ member)
qplot(count_processing_days, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, fill = member)
qplot(localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = "density"
, fill = member)
qplot(count_processing_days, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, color = member)
qplot(localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID" & bidlog$count_processing_days <51 & bidlog$localdn_savings_rate < 1 & bidlog$localdn_savings_rate > 0,]
, geom = "density"
, color = member)
