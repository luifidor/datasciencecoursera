rug(bidlog$count_processing_days)
abline(v=median(bidlog$count_processing_days)), col ="magenta", lwd = 4)
abline(v=median(bidlog$count_processing_days)), col ="magenta", lwd = 4)
abline(v=median(bidlog$count_processing_days), col ="magenta", lwd = 4)
hist(bidlog$count_processing_days, col = "red", breaks = 100)
abline(v=median(bidlog$count_processing_days), col ="magenta", lwd = 4)
abline(v=median(bidlog$count_processing_days), col ="black", lwd = 4)
summary(bidlog$count_processing_days)
barplot(table(bidlog$member), col="wheat", main = "Number of bids per Member")
for (i in levels(factor(bidlog$open_date_cy))) {
summary(bidlog[bidlog$open_date_cy == i]$count_processing_days)
}
for (i in levels(factor(bidlog$open_date_cy))) {
summary(bidlog[bidlog$open_date_cy == i,]$count_processing_days)
}
for (i in levels(factor(bidlog$open_date_cy))) {
a <- c(a, summary(bidlog[bidlog$open_date_cy == i,]$count_processing_days))
}
a
levels(factor(bidlog$open_date_cy))
for (i in levels(factor(bidlog$open_date_cy))) {
print(summary(bidlog[bidlog$open_date_cy == i,]$count_processing_days))
}
plot(bidlog[bidlog$open_date_cy > 2015,]$open_date_cy)
plot(bidlog[bidlog$open_date_cy > 2015,]$count_processing_days)
hist(bidlog[bidlog$open_date_cy > 2015,]$count_processing_days)
hist(bidlog[bidlog$open_date_cy > 2015,]$count_processing_days, breaks = 100)
hist(bidlog[bidlog$open_date_cy > 2015 & bidlog$count_processing_days > 0,]$count_processing_days, breaks = 100)
hist(bidlog[bidlog$open_date_cy = 2016 & bidlog$count_processing_days > 0,]$count_processing_days, breaks = 100)
hist(bidlog[bidlog$open_date_cy == 2016 & bidlog$count_processing_days > 0,]$count_processing_days, breaks = 100)
hist(bidlog[bidlog$open_date_cy == 2017 & bidlog$count_processing_days > 0,]$count_processing_days, breaks = 100)
boxplot(bidlog$count_processing_days ~ data$reason, col="red")
boxplot(count_processing_days ~ reason, data = data, col="red")
data <- bidlog[bidlog$open_date_cy == 2016 & bidlog$count_processing_days > 0,]
boxplot(bidlog$count_processing_days ~ data$reason, col="red")
boxplot(data$count_processing_days ~ data$reason, col="red")
abline(h=21)
abline(h=14)
boxplot(data$count_processing_days ~ data$reason, col="red", las = 1)
boxplot(data$count_processing_days ~ data$reason, col="red", las = 1, horizontal = TRUE)
boxplot(data$count_processing_days ~ data$reason, col="red", las = 1, horizontal = TRUE, cex.axis = 0.7)
op <- par(mar = c(5, 10, 4, 2) + 0.1)
par(op)
op <- par(mar = c(5, 10, 4, 2) + 0.1)
par(op)
boxplot(data$count_processing_days ~ data$reason, col="red", las = 1, horizontal = TRUE, cex.axis = 0.7)
boxplot(data$count_processing_days ~ data$reason, col="red", las = 2, horizontal = TRUE, cex.axis = 0.7)
op <- par(mar = c(5, 25, 4, 2) + 0.1)
par(op)
boxplot(data$count_processing_days ~ data$reason, col="red", las = 2, horizontal = TRUE, cex.axis = 0.7)
par(mar = c(5, 25, 4, 2) + 0.1)
boxplot(data$count_processing_days ~ data$reason, col="red", las = 2, horizontal = TRUE, cex.axis = 0.7)
par(mar = c(5, 10, 4, 2) + 0.1)
boxplot(data$count_processing_days ~ data$reason, col="red", las = 2, horizontal = TRUE, cex.axis = 0.7)
data <- bidlog[bidlog$open_date_cy == 2017 & bidlog$count_processing_days > 0,]
par(mar = c(5, 10, 4, 2) + 0.1)
boxplot(data$count_processing_days ~ data$reason, col="red", las = 2, horizontal = TRUE, cex.axis = 0.7)
summary(data$count_processing_days)
summary(data[data$reason=="minibid", ]$count_processing_days)
summary(data[data$reason=="MINIBID", ]$count_processing_days)
(data$count_processing_days ~ data$reason, col="red", las = 2, horizontal = TRUE, cex.axis = 0.7, main="Count Processing Days per Reason")
hist(data$reason, col="red", las = 2, horizontal = TRUE, cex.axis = 0.7, main="Count Processing Days per Reason")
barplot(data$reason, col="red", las = 2, horizontal = TRUE, cex.axis = 0.7, main="Count Processing Days per Reason")
barplot(table(data$reason), col="red", las = 2, horizontal = TRUE, cex.axis = 0.7, main="Count Processing Days per Reason")
par(mar = c(5, 10, 4, 2) + 0.1)
boxplot(data$count_processing_days ~ data$reason, col="wheat", las = 2, horizontal = TRUE, cex.axis = 0.7, main="Count Processing Days per Reason")
barplot(table(data$reason), col="green", las = 2, horizontal = TRUE, cex.axis = 0.7, main="Count Bids per Reason - 2017")
par(mar = c(5, 10, 4, 2) + 0.1)
boxplot(data$count_processing_days ~ data$reason, col="wheat", las = 2, horizontal = TRUE, cex.axis = 0.7, main="Count Processing Days per Reason")
barplot(table(data$reason), col="gray", las = 2, horizontal = TRUE, cex.axis = 0.7, main="Count Bids per Reason - 2017")
barplot(table(data$reason), col="gray", las = 1, horizontal = TRUE, cex.axis = 0.7, main="Count Bids per Reason - 2017")
barplot(table(data$reason), col="gray", las = 2, vertical = TRUE, cex.axis = 0.7, main="Count Bids per Reason - 2017")
barplot(table(data$reason), col="gray", las = 2, horizontal = FALSE, cex.axis = 0.7, main="Count Bids per Reason - 2017")
barplot(table(data$reason), col="gray", las = 2, horizontal = FALSE, cex.axis = 0.7, main="Count Bids per Reason - 2017")
barplot(table(data$reason), col="gray", las = 2, horizontal = TRUE, cex.axis = 0.7, main="Count Bids per Reason - 2017")
par(mar = c(5, 10, 4, 2) + 0.1)
boxplot(data$count_processing_days ~ data$reason, col="wheat", las = 2, horizontal = TRUE, cex.axis = 0.7, main="Count Processing Days per Reason")
par(mar = c(5, 5, 4, 2) + 0.1)
barplot(table(data$reason), col="gray", las = 2, horizontal = TRUE, cex.axis = 0.7, main="Count Bids per Reason - 2017")
barplot(table(data$reason), col="gray", las = 2, horiz = TRUE, cex.axis = 0.7, main="Count Bids per Reason - 2017")
par(mar = c(5, 15, 4, 2) + 0.1)
barplot(table(data$reason), col="gray", las = 2, horiz = TRUE, cex.axis = 0.7, main="Count Bids per Reason - 2017")
par(mar = c(5, 10, 4, 2) + 0.1)
boxplot(data$count_processing_days ~ data$reason, col="wheat", las = 2, horizontal = TRUE, cex.axis = 0.7, main="Count Processing Days per Reason")
par(mar = c(5, 15, 4, 2) + 0.1)
barplot(table(data$reason), col="gray", las = 2, horiz = TRUE, cex.axis = 0.7, main="Count Bids per Reason - 2017")
par(mar = c(5, 15, 4, 2) + 0.1)
boxplot(data$count_processing_days ~ data$reason, col="wheat", las = 2, horizontal = TRUE,  main="Count Processing Days per Reason")
par(mar = c(5, 15, 4, 2) + 0.1)
barplot(table(data$reason), col="gray", las = 2, horiz = TRUE, cex.axis = 0.7, main="Count Bids per Reason - 2017")
barplot(table(data[data$bid_status=="PENDING" || data$bid_status=="CLOSED"]$reason), col="gray", las = 2, horiz = TRUE, cex.axis = 0.7, main="Count Bids per Reason - 2017")
hist(subset(data, member=="ABC")$count_processing_days, col = "green")
hist(subset(data, member=="WAG")$count_processing_days, col = "green")
head(data)
plot(subset(data, bid_owner == "Marc_Friolet")$count_processing_days
)
boxplot(subset(data, bid_owner == "Marc_Friolet")$count_processing_days
boxplot(subset(data, bid_owner == "Marc_Friolet")$count_processing_days)
boxplot(subset(data, bid_owner == "Marc_Friolet")$count_processing_days)
boxplot(subset(data, bid_owner == "Marc_Friolet")$count_processing_days ~ subset(data, bid_owner == "Marc_Friolet")$member)
levels(data$bid_owner)
boxplot(subset(data, bid_owner == "Mike_Osinski")$count_processing_days ~ subset(data, bid_owner == "Mike_Osinski")$member)
boxplot(subset(data, bid_owner == c("Mike_Osinski","Marc_Friolet") )$count_processing_days ~ subset(data, bid_owner == c("Mike_Osinski","Marc_Friolet"))$member)
boxplot(subset(data, bid_owner == "Mike_Osinski")$count_processing_days ~ subset(data, bid_owner == "Mike_Osinski")$member)
boxplot(subset(data, bid_owner == "Marc_Friolet")$count_processing_days ~ subset(data, bid_owner == "Marc_Friolet")$member)
boxplot(subset(data, bid_owner == "Mike_Osinski")$count_processing_days ~ subset(data, bid_owner == "Mike_Osinski")$member)
with(data, plot(count_processing_days, reason, col =member))
with(data, plot(count_processing_days, award_localdn_var, col =member))
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
boxplot(subset(data, bid_owner == "Marc_Friolet")$count_processing_days ~ subset(data, bid_owner == "Marc_Friolet")$member)
boxplot(subset(data, bid_owner == "Mike_Osinski")$count_processing_days ~ subset(data, bid_owner == "Mike_Osinski")$member)
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
boxplot(subset(data, bid_owner == "Marc_Friolet")$count_processing_days ~ subset(data, bid_owner == "Marc_Friolet")$member, main = "MF")
boxplot(subset(data, bid_owner == "Mike_Osinski")$count_processing_days ~ subset(data, bid_owner == "Mike_Osinski")$member, main = "MO")
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
boxplot(subset(data, bid_owner == "Marc_Friolet")$count_processing_days ~ subset(data, bid_owner == "Marc_Friolet")$member, main = "MF", ylim = c(0, 40))
boxplot(subset(data, bid_owner == "Mike_Osinski")$count_processing_days ~ subset(data, bid_owner == "Mike_Osinski")$member, main = "MO", ylim = c(0, 40))
boxplot(subset(data, bid_owner == "Marc_Friolet")$count_processing_days ~ subset(data, bid_owner == "Marc_Friolet" & member == c("ABC", "WAG"))$member, main = "MF", ylim = c(0, 40))
boxplot(subset(data, bid_owner == "Marc_Friolet" & member == c("ABC", "WAG"))$count_processing_days ~ subset(data, bid_owner == "Marc_Friolet" & member == c("ABC", "WAG"))$member, main = "MF", ylim = c(0, 40))
boxplot(subset(data, bid_owner == "Mike_Osinski")$count_processing_days ~ subset(data, bid_owner == "Mike_Osinski")$member, main = "MO", ylim = c(0, 40))
boxplot(subset(data, bid_owner == "Mike_Osinski" & member == c("ABC", "WAG"))$count_processing_days ~ subset(data, bid_owner == "Mike_Osinski" & member == c("ABC", "WAG"))$member, main = "MO", ylim = c(0, 40))
boxplot(subset(data, bid_owner == "Marc_Friolet")$count_processing_days ~ subset(data, bid_owner == "Marc_Friolet")$member, main = "MF", ylim = c(0, 40))
boxplot(subset(data, bid_owner == "Mike_Osinski")$count_processing_days ~ subset(data, bid_owner == "Mike_Osinski")$member, main = "MO", ylim = c(0, 40))
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
boxplot(subset(data, bid_owner == "Marc_Friolet")$count_processing_days ~ subset(data, bid_owner == "Marc_Friolet")$member, main = "MF", ylim = c(0, 40))
boxplot(subset(data, bid_owner == "Mike_Osinski")$count_processing_days ~ subset(data, bid_owner == "Mike_Osinski")$member, main = "MO", ylim = c(0, 40))
data <- bidlog[bidlog$open_date_cy == 2017 & bidlog$count_processing_days > 0 & bidlog$member == c("ABC", "WAG"),]
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
boxplot(subset(data, bid_owner == "Marc_Friolet")$count_processing_days ~ subset(data, bid_owner == "Marc_Friolet")$member, main = "MF", ylim = c(0, 40))
boxplot(subset(data, bid_owner == "Mike_Osinski")$count_processing_days ~ subset(data, bid_owner == "Mike_Osinski")$member, main = "MO", ylim = c(0, 40))
par(mfcol = c(1,2), mar = c(5, 4, 2, 1))
hist(subset(data, bid_owner == "Marc_Friolet")$member, main = "MF")
barplot(table(subset(data, bid_owner == "Marc_Friolet")$member), main = "MF")
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
barplot(table(subset(data, bid_owner == "Marc_Friolet")$member), main = "MF")
barplot(table(subset(data, bid_owner == "Mike_Osinski")$member), main = "MO")
cn <-odbcDriverConnect("driver=SQL Server;server=swbbesqlp01.wbad.group;database=minibid; uid=minibid_submit; pwd=Wbad2016")
bidlog <- sqlFetch(cn, 'fact.bidlog', colnames=FALSE,
rows_at_time=1000)
library(RODBC)
cn <-odbcDriverConnect("driver=SQL Server;server=swbbesqlp01.wbad.group;database=minibid; uid=minibid_submit; pwd=Wbad2016")
bidlog <- sqlFetch(cn, 'fact.bidlog', colnames=FALSE,
rows_at_time=1000)
bidlog <- sqlFetch(cn, 'fact.bidlog', colnames=FALSE,
rows_at_time=1000)
cn <-odbcDriverConnect("driver=SQL Server;server=swbbesqlp01.wbad.group;database=minibid; uid=minibid_submit; pwd=Wbad2016")
bidlog <- sqlFetch(cn, 'fact.bidlog', colnames=FALSE,
rows_at_time=1000)
cn <-odbcDriverConnect("driver=SQL Server;server=swbbesqlp01.wbad.group;database=minibid; uid=wbad_report; pwd=Wbad2016")
cn <-odbcDriverConnect("driver=SQL Server;server=tcp:swbbesqlp01.wbad.group,1434;database=minibid; uid=wbad_report; pwd=Wbad2016")
bidlog <- sqlFetch(cn, 'fact.bidlog', colnames=FALSE,
rows_at_time=1000)
data <- bidlog[bidlog$open_date_cy == 2017 & bidlog$count_processing_days > 0 & bidlog$member == c("ABC", "WAG"),]
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
barplot(table(subset(data, bid_owner == "Marc_Friolet")$member), main = "MF")
barplot(table(subset(data, bid_owner == "Mike_Osinski")$member), main = "MO")
hist(subset(data, bid_owner == "Mike_Osinski")$count_processing_days ~ subset(data, bid_owner == "Mike_Osinski")$member, main = "MO", ylim = c(0, 40))
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
boxplot(subset(data, bid_owner == "Marc_Friolet")$count_processing_days ~ subset(data, bid_owner == "Marc_Friolet")$member, main = "MF", ylim = c(0, 40))
boxplot(subset(data, bid_owner == "Mike_Osinski")$count_processing_days ~ subset(data, bid_owner == "Mike_Osinski")$member, main = "MO", ylim = c(0, 40))
barplot(subset(data, bid_owner == "Mike_Osinski")$member ~ subset(data, bid_owner == "Mike_Osinski")$reason)
barplot(table(subset(data, bid_owner == "Mike_Osinski")$member) ~ table(subset(data, bid_owner == "Mike_Osinski")$reason))
barplot(table(subset(data, bid_owner == "Marc_Friolet")$member), main = "MF")
data <- bidlog[bidlog$open_date_cy == 2017 & bidlog$count_processing_days > 0 & (bidlog$member == "ABC" | bidlog$member == "WAG")),]
data <- bidlog[bidlog$open_date_cy == 2017 & bidlog$count_processing_days > 0 & (bidlog$member == "ABC" | bidlog$member == "WAG"),]
barplot(table(subset(data, bid_owner == "Marc_Friolet")$member), main = "MF")
barplot(table(subset(data, bid_owner == "Marc_Friolet")$member), main = "MF")
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
barplot(table(subset(data, bid_owner == "Marc_Friolet")$member), main = "MF")
barplot(table(subset(data, bid_owner == "Mike_Osinski")$member), main = "MO")
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
barplot(table(subset(data, bid_owner == "Marc_Friolet")$member), main = "MF", ylim = 150)
barplot(table(subset(data, bid_owner == "Mike_Osinski")$member), main = "MO", ylim = 150)
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
barplot(table(subset(data, bid_owner == "Marc_Friolet")$member), main = "MF", ylim = c(0,150))
barplot(table(subset(data, bid_owner == "Mike_Osinski")$member), main = "MO", ylim = c(0,150))
intersect(data$member, data$reason)
with(data, interaction(member,  reason), drop = TRUE )
barplot(table(subset(data, interaction(member,  reason))$member), main = "MF", horiz = FALSE, ylim = c(0,150))
interaction(data$member,  data$reason)
with(data, interaction(member,  reason), drop = TRUE )
table(with(data, interaction(member,  reason), drop = TRUE ))
barplot(table(with(data, interaction(member,  reason), drop = TRUE )))
par()
barplot(table(with(data, interaction(member,  reason), drop = TRUE )))
reset_par <- function(){
op <- structure(list(xlog = FALSE, ylog = FALSE, adj = 0.5, ann = TRUE,
ask = FALSE, bg = "transparent", bty = "o", cex = 1, cex.axis = 1,
cex.lab = 1, cex.main = 1.2, cex.sub = 1, col = "black",
col.axis = "black", col.lab = "black", col.main = "black",
col.sub = "black", crt = 0, err = 0L, family = "", fg = "black",
fig = c(0, 1, 0, 1), fin = c(6.99999895833333, 6.99999895833333
), font = 1L, font.axis = 1L, font.lab = 1L, font.main = 2L,
font.sub = 1L, lab = c(5L, 5L, 7L), las = 0L, lend = "round",
lheight = 1, ljoin = "round", lmitre = 10, lty = "solid",
lwd = 1, mai = c(1.02, 0.82, 0.82, 0.42), mar = c(5.1, 4.1,
4.1, 2.1), mex = 1, mfcol = c(1L, 1L), mfg = c(1L, 1L, 1L,
1L), mfrow = c(1L, 1L), mgp = c(3, 1, 0), mkh = 0.001, new = FALSE,
oma = c(0, 0, 0, 0), omd = c(0, 1, 0, 1), omi = c(0, 0, 0,
0), pch = 1L, pin = c(5.75999895833333, 5.15999895833333),
plt = c(0.117142874574832, 0.939999991071427, 0.145714307397962,
0.882857125425167), ps = 12L, pty = "m", smo = 1, srt = 0,
tck = NA_real_, tcl = -0.5, usr = c(0.568, 1.432, 0.568,
1.432), xaxp = c(0.6, 1.4, 4), xaxs = "r", xaxt = "s", xpd = FALSE,
yaxp = c(0.6, 1.4, 4), yaxs = "r", yaxt = "s", ylbias = 0.2), .Names = c("xlog",
"ylog", "adj", "ann", "ask", "bg", "bty", "cex", "cex.axis",
"cex.lab", "cex.main", "cex.sub", "col", "col.axis", "col.lab",
"col.main", "col.sub", "crt", "err", "family", "fg", "fig", "fin",
"font", "font.axis", "font.lab", "font.main", "font.sub", "lab",
"las", "lend", "lheight", "ljoin", "lmitre", "lty", "lwd", "mai",
"mar", "mex", "mfcol", "mfg", "mfrow", "mgp", "mkh", "new", "oma",
"omd", "omi", "pch", "pin", "plt", "ps", "pty", "smo", "srt",
"tck", "tcl", "usr", "xaxp", "xaxs", "xaxt", "xpd", "yaxp", "yaxs",
"yaxt", "ylbias"))
par(op)
}
reset_par
reset_par()
arplot(table(with(data, interaction(member,  reason), drop = TRUE )))
barplot(table(with(data, interaction(member,  reason), drop = TRUE )))
barplot(table(with(data, interaction(member,  reason), drop = TRUE )), horiz = FALSE)
barplot(table(with(data, interaction(member,  reason), drop = TRUE )), horiz = FALSE)
barplot(table(with(data, interaction(member,  reason), drop = TRUE )), horiz = TRUE)
barplot(table(with(data, interaction(member,  reason), drop = TRUE )), horiz = TRUE, las = 2)
library(lattice)
class(data)
xyplot(award_localdn_var  ~ count_processing_days  | bid_owner, data = data, layout = c(5, 1))
reset_par()
xyplot(award_localdn_var  ~ count_processing_days  | bid_owner, data = data, layout = c(5, 1))
xyplot(award_localdn_var  ~ count_processing_days  | bid_owner, data = data, layout = c(5, 1))
xyplot(award_localdn_var  ~ count_processing_days  | member, data = data, layout = c(5, 1))
xyplot(award_localdn_var  ~ count_processing_days  | member, data = data, layout = c(2, 1))
gplot(localdn_savings_rate, count_processing_date, data = data)
library(ggplot2)
gplot(localdn_savings_rate, count_processing_date, data = data)
qplot(localdn_savings_rate, count_processing_date, data = data)
qplot(localdn_savings_rate, count_processing_days, data = data)
qplot(count_processing_days, localdn_savings_rate, data = data)
qplot(count_processing_days, localdn_savings_rate, data = data, ylim ylim = c(0,1))
qplot(count_processing_days, localdn_savings_rate, data = data, ylim = c(0,1))
with(bidlog, plot(localdn_savings_rate, open_date_cy))
with(bidlog, plot(open_date_cy, localdn_savings_rate))
with(bidlog, plot(open_date_cy, localdn_savings_rate, ylim=c(0, 1))
with(bidlog, plot(open_date_cy, localdn_savings_rate, ylim=c(0, 1)))
with(bidlog, plot(open_date_cy, localdn_savings_rate, ylim=c(0, 1)))
with(bidlog, plot(open_date_cy, localdn_savings_rate, ylim=c(0, 2)))
transform(bidlog, year = factor(open_date_cy))
transform(bidlog, open_date_cy = factor(open_date_cy))
boxplot (localdn_savings_rate ~ open_date_cy, bidlog, xlab = "Calendar Year", ylab = "Savings rate" )
boxplot (localdn_savings_rate ~ open_date_cy, bidlog, xlab = "Calendar Year", ylab = "Savings rate", ylim = c(0,1) )
boxplot (localdn_savings_rate ~ interaction(member, open_date_cy), bidlog, xlab = "Calendar Year", ylab = "Savings rate", ylim = c(0,1) )
boxplot (localdn_savings_rate ~ interaction(member, open_date_cy), subset(bidlog, member == "ABC" | member == "WAG", xlab = "Calendar Year", ylab = "Savings rate", ylim = c(0,1) )
boxplot (localdn_savings_rate ~ interaction(member, open_date_cy), subset(bidlog, member == "ABC" | member == "WAG"), xlab = "Calendar Year", ylab = "Savings rate", ylim = c(0,1) )
boxplot (localdn_savings_rate ~ interaction(member, open_date_cy), subset(bidlog, member == "ABC" | member == "WAG"), xlab = "Calendar Year", ylab = "Savings rate", ylim = c(0,1) )
abline)(h = 0.1)
abline(h = 0.1)
aggregate(x ~ member + open_date_cy, data = bidlog, FUN = length
aggregate(x ~ member + open_date_cy, data = bidlog, FUN = length)
aggregate(x ~ member + open_date_cy, data = bidlog, FUN = length)
aggregate(interaction(member, open_date_cy), data = bidlog, FUN = length)
aggregate(interaction(bidlog$member, bidlog$open_date_cy), data = bidlog, FUN = length)
library(data.table)
DT <- data.table(bidlog)
DT[,.N, by = list(open_date_cy, member)]
DT <- data.table(subset(bidlog, member == "ABC" | member == "WAG"))
DT[,.N, by = list(open_date_cy, member)]
with(bidlog, plot(open_date_cy, localdn_savings_rate, ylim=c(0, 2)))
with(bidlog, plot(count_processing_days, localdn_savings_rate, ylim=c(0, 2)))
with(subset(bidlog, member =="ABC"), points(count_processing_days, localdn_savings_rate, col = "blue"))
with(bidlog, plot(count_processing_days, localdn_savings_rate, ylim=c(0, 2), type ="n"))
with(subset(bidlog, member =="ABC" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "blue"))
with(subset(bidlog, member =="WAG" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "red"))
legend("topright", pch = 1, col = c("blue", "red", legend = c("ABC", "WAG")))
with(bidlog, plot(count_processing_days, localdn_savings_rate, ylim=c(0, 2), xlim = c(0,50), type ="n"))
with(subset(bidlog, member =="ABC" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "blue"))
with(subset(bidlog, member =="WAG" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "red"))
legend("topright", pch = 1, col = c("blue", "red", legend = c("ABC", "WAG")))
library(gridExtra)
x <- DT[,.N, by = list(open_date_cy, member)]
ss <- tableGrob(x)
grid.arrange(ss)
order(x$open_date_cy, x$member)
ss <- tableGrob(x[order(x$open_date_cy, x$member)])
grid.arrange(ss)
with(bidlog, plot(count_processing_days, localdn_savings_rate, ylim=c(0, 2), xlim = c(0,50), type ="n"))
with(subset(bidlog, member =="ABC" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "blue", pch = 20))
with(subset(bidlog, member =="WAG" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "red", pch = 20))
legend("topright", pch = 1, col = c("blue", "red", legend = c("ABC", "WAG")))
with(bidlog, plot(count_processing_days, localdn_savings_rate, ylim=c(0, 2), xlim = c(0,50), type ="n"))
with(subset(bidlog, reason == "MINIBID" & member =="ABC" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "blue", pch = 20))
with(subset(bidlog, reason == "MINIBID" & member =="WAG" & open_date_cy == 2017), points(count_processing_days, localdn_savings_rate, col = "red", pch = 20))
legend("topright", pch = 1, col = c("blue", "red", legend = c("ABC", "WAG")))
with(bidlog, plot(count_processing_days, localdn_savings_rate, ylim=c(0, 2), xlim = c(0,50), type ="n"))
with(subset(bidlog, reason == "MINIBID" & member =="ABC" & open_date_cy == 2016), points(count_processing_days, localdn_savings_rate, col = "blue", pch = 20))
with(subset(bidlog, reason == "MINIBID" & member =="WAG" & open_date_cy == 2016), points(count_processing_days, localdn_savings_rate, col = "red", pch = 20))
legend("topright", pch = 1, col = c("blue", "red", legend = c("ABC", "WAG")))
legend("topright", pch = 1, col = c("blue", "red"), legend = c("ABC", "WAG"))
legend("topright", pch = 20, col = c("blue", "red"), legend = c("ABC", "WAG"))
model <- lm(count_processing_days ~ localdn_savings_rate, bidlog)
model
abline(model, lwd = 2)
with(bidlog, plot(count_processing_days, localdn_savings_rate, ylim=c(0, 2), xlim = c(0,50), type ="n"))
with(subset(bidlog, reason == "MINIBID" & member =="ABC" & open_date_cy == 2016), points(count_processing_days, localdn_savings_rate, col = "blue", pch = 20))
with(subset(bidlog, reason == "MINIBID" & member =="WAG" & open_date_cy == 2016), points(count_processing_days, localdn_savings_rate, col = "red", pch = 20))
model <- lm(count_processing_days ~ localdn_savings_rate, bidlog)
abline(model, lwd = 2)
model <- lm(count_processing_days ~ localdn_savings_rate, subset(bidlog, reason == "MINIBID" & member =="WAG" & open_date_cy == 2016)
abline(model, lwd = 2)
model <- lm(count_processing_days ~ localdn_savings_rate, subset(bidlog, reason == "MINIBID" & member =="WAG" & open_date_cy == 2016))
abline(model, lwd = 2)
legend("topright", pch = 20, col = c("blue", "red"), legend = c("ABC", "WAG"))
abline(model, lwd = 2)
plot(model)
cn <-odbcDriverConnect("driver=SQL Server;server=tcp:swbbesqlp01.wbad.group,1434;database=minibid; uid=wbad_report; pwd=Wbad2016")
bidlog <- sqlFetch(cn, 'fact.bidanalysis_line_detail', colnames=FALSE,
rows_at_time=1000)
cn <-odbcDriverConnect("driver=SQL Server;server=tcp:swbbesqlp01.wbad.group,1434;database=minibid; uid=wbad_report; pwd=Wbad2016")
bidlog <- sqlFetch(cn, 'fact.bidlog', colnames=FALSE,
rows_at_time=1000)
bidline <- sqlFetch(cn, 'fact.bidanalysis_line_detail', colnames=FALSE,
rows_at_time=1000)
summary(bidline$vendor)
par(mfrow = c(1, 3), mar =c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(bidlog, {
plot (localdn_savings_rate, open_date_cy_month, main = "DNAC Savings per month")
plot (contract_savings_rate, open_date_cy_month, main = "Contract Savings per month")
plot (count_processing_days, open_date_cy_month, main ="Processing Days")
mtext ("Bidlog analysis", outer = TRUE)
})
par(mfrow = c(1, 3), mar =c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(bidlog, {
plot (localdn_savings_rate, open_date_cy, main = "DNAC Savings per month")
plot (contract_savings_rate, open_date_cy, main = "Contract Savings per month")
plot (count_processing_days, open_date_cy, main ="Processing Days")
mtext ("Bidlog analysis", outer = TRUE)
})
par(mfrow = c(1, 3), mar =c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(bidlog, {
plot (open_date_cy, localdn_savings_rate, main = "DNAC Savings per month", ylim = c(0,1))
plot (open_date_cy, contract_savings_rate, open_date_cy, main = "Contract Savings per month", ylim = c(0,1))
plot (open_date_cy, count_processing_days, open_date_cy, main ="Processing Days", ylim = c(0,1))
mtext ("Bidlog analysis", outer = TRUE)
})
par(mfrow = c(1, 3), mar =c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(bidlog, {
plot (open_date_cy, localdn_savings_rate, main = "DNAC Savings per month", ylim = c(0,1))
plot (open_date_cy, contract_savings_rate, open_date_cy, main = "Contract Savings per month", ylim = c(0,1))
plot (open_date_cy, count_processing_days, open_date_cy, main ="Processing Days", ylim = c(0,1))
mtext ("Bidlog analysis", outer = TRUE)
})
par(mfrow = c(1, 3), mar =c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(bidlog, {
plot (open_date_cy, localdn_savings_rate, main = "DNAC Savings per month", ylim = c(0,1))
plot (open_date_cy, contract_savings_rate, open_date_cy, main = "Contract Savings per month", ylim = c(0,1))
plot (open_date_cy, count_processing_days, open_date_cy, main ="Processing Days")
mtext ("Bidlog analysis", outer = TRUE)
})
par(mfrow = c(1, 3), mar =c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(bidlog, {
plot (open_date_cy, localdn_savings_rate, main = "DNAC Savings per month", ylim = c(0,1))
plot (open_date_cy, contract_savings_rate, main = "Contract Savings per month", ylim = c(0,1))
plot (open_date_cy, count_processing_days, main ="Processing Days")
mtext ("Bidlog analysis", outer = TRUE)
})
length(bidlines)
nrows(bidlines)
nrow(bidlines)
nrow(bidline)
levels(factor(bidline$bid_id))
bid_ids <- levels(factor(bidline$bid_id))
levels(bidline$offer_type)
bid_ids <- levels(factor(bidline$bid_id))
for (id in bid_ids) {
b <- subset(bidline, bid_id == id)
for (i in 1:nrow(b)) {
if (tolower(b[i, ]$offer_type) == "inc" ) {
inc <- rbind(inc, b[i, ])
} else if (tolower(b[i, ]$offer_type) == "offer") {
offer <- rbind(offer, b[i, ])
}
}
}
append_row <- function(vector, row) {
if (is.null(vector)) {
vector <- row
} else {
rbind(vector, row)
}
}
append_row <- function(vector, row) {
if (is.null(vector)) {
vector <- row
} else {
rbind(vector, row)
}
}
bid_ids <- levels(factor(bidline$bid_id))
for (id in bid_ids) {
b <- subset(bidline, bid_id == id)
for (i in 1:nrow(b)) {
if (tolower(b[i, ]$offer_type) == "inc" ) {
inc <- append_row(inc, b[i, ])
} else if (tolower(b[i, ]$offer_type) == "offer") {
offer <- append_row(offer, b[i, ])
}
}
}
bid_ids <- levels(factor(bidline$bid_id))
offer <- NULL
inc <- NULL
for (id in bid_ids) {
b <- subset(bidline, bid_id == id)
for (i in 1:nrow(b)) {
if (tolower(b[i, ]$offer_type) == "inc" ) {
inc <- append_row(inc, b[i, ])
} else if (tolower(b[i, ]$offer_type) == "offer") {
offer <- append_row(offer, b[i, ])
}
}
}
offer
inc
inc <- subset(bidline, offer_type == "inc")
offer <- subset(bidline, offer_type == "offer")
lines_merged <- merge(offer, inc, by =c("bid_id", "item_num"))
lines_merged <- merge(offer, inc[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "localdn_cost", "allindn_cost")], by =c("bid_id", "item_num"))
inc[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "localdn_cost", "allindn_cost")]
inc[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "locadn_cost", "allindn_cost")]
inc <- subset(bidline, offer_type == "inc")
inc[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "locadn_cost", "allindn_cost")]
lines_merged <- merge(offer, inc[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "locadn_cost", "allindn_cost")], by =c("bid_id", "item_num"))
lines_merged <- merge(offer, inc[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "locadn_cost", "allindn_cost", "bid_id", "item_num")], by =c("bid_id", "item_num"))
View(bidlog)
View(lines_merged)
View(lines_merged)
View(lines_merged)
View(m)
View(r)
subset(bidline, offer_type == "offer")
inc <- subset(bidline, offer_type == "Inc")
offer <- subset(bidline, offer_type == "Offer")
lines_merged <- merge(offer, inc[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "locadn_cost", "allindn_cost", "bid_id", "item_num")], by =c("bid_id", "item_num"))
View(lines_merged)
View(data)
award <- subset(bidline, award >= 0.75)
lines_awarded <- merge(lines_merged, award, by =c("bid_id", "item_num"))
lines_awarded <- merge(lines_merged, award[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "locadn_cost", "allindn_cost", "bid_id", "item_num")], by =c("bid_id", "item_num"))
View(bidlog)
View(lines_awarded)
subset(lines_awarded, award == 0 & locadn < x.allin_cost)
subset(lines_awarded, award == 0 & locadn_cost < x.allin_cost)
subset(lines_awarded, award == 0 & locadn_cost < allin_cost.x)
subset(lines_awarded, award == 0 & locadn_cost < allidn_cost.x)
subset(lines_awarded, award == 0 & locadn_cost < x.allidn_cost)
subset(lines_awarded, award == 0 & locadn_cost < allindn_cost.x)
subset(lines_awarded, award.x == 0 & locadn_cost < allindn_cost.x)
analysis <- subset(lines_awarded, award.x == 0 & locadn_cost < allindn_cost.x)
head(analyis, 1)
head(analysis, 1)
analysis <- subset(lines_awarded, award.x == 0 & allindn_cost > allindn_cost.x)
analysis
analysis$bid_id
levels(factor(analysis$bid_id))
View(bidline)
sapply (analysis, function(x) {
diff <-  x$allindn_cost -  x$allindn_cost.x #awarded cost - lowest offer cost
value <- x$annual_qty * diff
cbind(x, diff, value)
})
diff <-  analysis$allindn_cost -  analysis$allindn_cost.x
value <- x$annual_qty * diff
consolidated <- cbind(analysis, diff, value)
value
value <- analysis$annual_qty * diff
consolidated <- cbind(analysis, diff, value)
head(consolidated[order(consolidated, value),], 1)
consolidated[order(consolidated, value),]
consolidated
head(consolidated[order(consolidated, consolidated$value),], 1)
length(consolidated)
length(value)
length(diff)
length(value)
length(analysis)
analysis <- subset(lines_awarded, award.x == 0 & allindn_cost > allindn_cost.x)
length(analysis)
diff <-  analysis$allindn_cost -  analysis$allindn_cost.x
length(diff)
analysis <- subset(lines_awarded, award.x == 0 & allindn_cost > allindn_cost.x)
lines_awarded <- merge(lines_merged, award[, c("ndc", "vendor", "award", "indirect_cost", "contract_cost", "locadn_cost", "allindn_cost", "bid_id", "item_num")], by =c("bid_id", "item_num"))
analysis <- subset(lines_awarded, award.x == 0 & allindn_cost > allindn_cost.x)
length(analysis)
analysis <- subset(lines_awarded, award.x == 0 & allindn_cost > allindn_cost.x)
analysis$allindn_cost -  analysis$allindn_cost.x
analysis$allindn_cost
analysis
analysis
length(analysis)
consolidated <- cbind(analysis, as.data.frame(diff),as.data.frame(value))
consolidated
head(consolidated[order(consolidated, consolidated$value),], 1)
length(diff)
length(value)
length(analysis)
head(consolidated[order(consolidated,value),], 1)
head(consolidated[order(value),], 1)
head(consolidated[order(value),"value"], 1)
head(consolidated[order(value, descresing = TRUE),"value"], 1)
head(consolidated[order(value, descending = TRUE),"value"], 1)
head(consolidated[order(-value),"value"], 1)
head(consolidated[order(-value),"value"], "bid_id")
head(consolidated[order(-value),"bid_id"], 1)
