str(mpg)
qplot (displ, hwy, data = mpg)
qplot (displ, hwy, data = mpg, smooth = "loess")
qplot (displ, hwy, data = mpg, stats_smooth = "loess")
qplot (displ, hwy, data = mpg) + geom_smooth("loess")
qplot (displ, hwy, data = mpg, panel = panel.loess)
qplot (displ, hwy, data = mpg) + stat_smooth("loess")
qplot (displ, hwy, data = mpg, smooth("loess"))
qplot (displ, hwy, data = mpg, smooth = "loess")
qplot (displ, hwy, data = mpg) + geom_smooth()
?lm
?loess
?anova
anova(lm(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",]))
lm(count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",])
lm(,count_processing_days, localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",])
lm(x=count_processing_days, y=localdn_savings_rate, data = bidlog[bidlog$reason == "MINIBID",])
lm( data = bidlog[bidlog$reason == "MINIBID",], x=count_processing_days, y=localdn_savings_rate)
cor(bidlog[bidlog$reason == "MINIBID",]$count_processing_days, bidlog[bidlog$reason == "MINIBID",]$ocaldn_savings_rate)
cor(x=bidlog[bidlog$reason == "MINIBID",]$count_processing_days, y=bidlog[bidlog$reason == "MINIBID",]$localdn_savings_rate)
corr(x=bidlog[bidlog$reason == "MINIBID",]$count_processing_days, y=bidlog[bidlog$reason == "MINIBID",]$localdn_savings_rate)
?cor
inc <- subset(bidline, offer_type == "Inc")
offers <- subset(bidline, offer_type == "Offer" & award == 0)
awards <- subset(bidline, award >= 0.75)
inc <- subset(bidline, offer_type == "Inc", select = c(bid_id, member, vendor, award, ndc, indirect_cost, contract_cost, locadn_cost, allindn_cost, scenario, item_num, offer_id, annual_qty))
inc <- subset(bidline, offer_type == "Inc", select = c(bid_id, member, vendor, award, ndc, indirect_cost, contract_cost, locadn_cost, allindn_cost, scenario, item_num, offerid, annual_qty))
colnames(inc) <- paste("inc", colnames(inc), sep = '_')
head(inc)
View(bidlog)
#retrieve all incumbent lines
inc <- subset(bidline, offer_type == "Inc", select = c(bid_id, snapshot, member, vendor, award, ndc, indirect_cost, contract_cost, locadn_cost, allindn_cost, scenario, item_num, offerid, annual_qty))
colnames(inc) <- paste("inc", colnames(inc), sep = '_')
#retrieve all offers lines
offers <- subset(bidline, offer_type == "Offer" & award == 0, select = c(bid_id, snapshot, member, vendor, award, ndc, indirect_cost, contract_cost, locadn_cost, allindn_cost, scenario, item_num, offerid, annual_qty))
colnames(offers) <- paste("offer", colnames(offers), sep = '_')
#retrieve all award lines
awards <- subset(bidline, award >= 0.75, select = c(bid_id, snapshot, member, vendor, award, ndc, indirect_cost, contract_cost, locadn_cost, allindn_cost, scenario, item_num, offerid, annual_qty))
colnames(awards) <- paste("awards", colnames(awards), sep = '_')
lines_merged <- merge(offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost")], by.x=c("inc_bid_id", "inc_item_num"), by.y=c("offer_bid_id", "offer_item_num"))
lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost")], by.x=c("inc_bid_id", "inc_item_num"), by.y=c("offer_bid_id", "offer_item_num"))
lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.x=c("inc_bid_id", "inc_item_num"), by.y=c("offer_bid_id", "offer_item_num"))
lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.y
(lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.y = c("inc_bid_id", "inc_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
(lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.y = c("inc_bid_id", "inc_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
(lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.y = c("inc_bid_id", "inc_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.y = c("inc_bid_id", "inc_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
lines_merged <- merge.data.frame (offer, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.y = c("inc_bid_id", "inc_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
lines_merged <- merge.data.frame (offers, inc[, c("inc_ndc", "inc_vendor", "inc_award", "inc_indirect_cost", "inc_contract_cost", "inc_locadn_cost", "inc_allindn_cost", "inc_bid_id", "inc_item_num")], by.y = c("inc_bid_id", "inc_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
head(lines_merge,5)
head(lines_merged,5)
awards <- subset(bidline, award >= 0.75, select = c(bid_id, snapshot, member, line_type, vendor, award, ndc, indirect_cost, contract_cost, locadn_cost, allindn_cost, scenario, item_num, offerid, annual_qty))
colnames(awards) <- paste("aw", colnames(awards), sep = '_')
lines_awarded <- merge.data.frame (lines_merged, award[, c("aw_ndc", "aw_vendor", "aw_award", "aw_indirect_cost", "aw_contract_cost", "aw_locadn_cost", "aw_allindn_cost", "aw_bid_id", "aw_item_num")], by.y = c("aw_bid_id", "aw_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
lines_awarded <- merge.data.frame (lines_merged, awards[, c("aw_ndc", "aw_vendor", "aw_award", "aw_indirect_cost", "aw_contract_cost", "aw_locadn_cost", "aw_allindn_cost", "aw_bid_id", "aw_item_num")], by.y = c("aw_bid_id", "aw_item_num"), by.x=c("offer_bid_id", "offer_item_num"))
offer_lowest_allincost <- subset(lines_awarded, award == 0 & allindn_cost < aw_allindn_cost)
offer_lowest_allincost <- subset(lines_awarded, offer_award == 0 & offer_allindn_cost < aw_allindn_cost)
head(offer_lowest_allincost)
diff <-  offer_lowest_allincost$aw_allindn_cost -  offer_lowest_allincost$offer_allindn_cost
value <- offer_lowest_allincost$annual_qty * diff
consolidated <- cbind(offer_lowest_allincost, diff = as.data.frame(diff), diff_Value = as.data.frame(value))
consolidated <- cbind(offer_lowest_allincost, as.data.frame(diff), as.data.frame(value))
length(diff)
length(value)
value <- offer_lowest_allincost$offers_annual_qty * diff
length(value)
value <- offer_lowest_allincost$offer_annual_qty * diff
length(value)
consolidated <- cbind(offer_lowest_allincost, as.data.frame(diff), as.data.frame(value))
consolidated <- cbind(offer_lowest_allincost, as.data.frame(diff), value = as.data.frame(value))
consolidated <- cbind(offer_lowest_allincost, diff = as.data.frame(diff), value = as.data.frame(value))
plot(value)
hist(value)
hist(value, breaks = 100)
hist(value, breaks = 100, xlim = c(0, 1e6))
hist(value, breaks = 300, xlim = c(0, 1e6))
hist(value, breaks = 500, xlim = c(0, 1e6))
hist(value, breaks = 1000, xlim = c(0, 1e6))
hist(value, breaks = 2000, xlim = c(0, 1e6))
hist(value, breaks = 2000, xlim = c(0, 1e6))
consolidated[order(consolidated, -consolidated$value),]
consolidated[order(-consolidated$value),]
consolidated[order(-consolidated$value),c("offer_bid_id", "snapshot", "offer_allindn_cost", "aw_allindn_cost")]
consolidated[order(-consolidated$value),c("offer_bid_id", "inc_snapshot", "offer_allindn_cost", "aw_allindn_cost")]
consolidated[order(-consolidated$value), c("inc_bid_id", "inc_snapshot", "offer_allindn_cost", "aw_allindn_cost")]
consolidated[order(-consolidated$value), c("inc_bid_id", "offer_snapshot", "offer_allindn_cost", "aw_allindn_cost")]
consolidated[order(-consolidated$value), c("offer_bid_id", "offer_snapshot", "offer_allindn_cost", "aw_allindn_cost")]
consolidated[order(-consolidated$value), c("offer_bid_id", "offer_snapshot", "offer_allindn_cost", "aw_allindn_cost", "value")]
consolidated[order(-consolidated$value), c("offer_bid_id", "offer_snapshot", "offer_allindn_cost", "aw_allindn_cost", "value", "offer_vendor", "aw_vendor")]
set.seed(12345)
par(mar = rep(0.2,4))
dataMatrix <- matrix(rnorm(400), nrow = 40)
image(1:30, 1:40, t(dataMatrix) [, nrow(dataMatrix):1]
)
# Lesson 3: Dimension Reduction (part 1)
set.seed(12345)
par(mar = rep(0.2,4))
dataMatrix <- matrix(rnorm(400), nrow = 40)
image(1:30, 1:40, t(dataMatrix) [, nrow(dataMatrix):1])
set.seed(12345)
par(mar = rep(0.2,4))
dataMatrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(dataMatrix) [, nrow(dataMatrix):1])
dataMatrix
heatmap(dataMatrix)
rep(c(0,3), each = 5)
heatmap(dataMatrix) #shows no pattern
##Add pattern to the matrix
set.seed(678910)
for(i in 1:40) {
# flip a coin
coinFlip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a common pattern to that row
if (coinFlip) {
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0,3), each = 5)
}
}
heatmap(dataMatrix) #shows no pattern
hh <- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order,]
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
reset_par()
hh <- hclust(dist(dataMatrix)) ## cluster analysis hierar
dataMatrixOrdered <- dataMatrix[hh$order,]
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
nrow(dataMatrixOrdered)
sdv1 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered)]:1)
plot(svd1$u[,1], 40:1, , xlab = "Row", ylab = "First left singular vector"), pch  = 19)
plot(svd1$v[,1], xlab = "Column", ylab = "First right singular vector", pch = 19)
sdv1 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered)]:1)
plot(svd1$u[,1], 40:1, , xlab = "Row", ylab = "First left singular vector", pch  = 19)
plot(svd1$v[,1], xlab = "Column", ylab = "First right singular vector", pch = 19)
plot(sdv1$u[,1], 40:1, , xlab = "Row", ylab = "First left singular vector", pch  = 19)
plot(sdv1$v[,1], xlab = "Column", ylab = "First right singular vector", pch = 19)
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered)]:1)
sdv1 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered)]:1)
plot(sdv1$u[,1], 40:1, , xlab = "Row", ylab = "First left singular vector", pch  = 19)
plot(sdv1$v[,1], xlab = "Column", ylab = "First right singular vector", pch = 19)
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered):1])
par(mfrow = c(1,2))
plot(sdv1$d, xlab = "Column", ylab = "Singular value", pch = 19)
plot(sdv1$d^2/sum(sdv1$d^2), xlab = "Column", ylab = "Singular value", pch = 19)
sdv1 <- svd(scale(dataMatrixOrdered))
pca1 <- prcomp(dataMatrixOrdered, scale = TRUE)
plot(pca1$rotation[,1], svd1$v[,1], pch = 19, xlab = "Principal Component 1", ylab = "Right Singular Vector 1")
sdv1 <- sdv(scale(dataMatrixOrdered))
pca1 <- prcomp(dataMatrixOrdered, scale = TRUE)
plot(pca1$rotation[,1], sdv1$v[,1], pch = 19, xlab = "Principal Component 1", ylab = "Right Singular Vector 1")
## Relationship to principal components
sdv1 <- svd(scale(dataMatrixOrdered))
pca1 <- prcomp(dataMatrixOrdered, scale = TRUE)
plot(pca1$rotation[,1], sdv1$v[,1], pch = 19, xlab = "Principal Component 1", ylab = "Right Singular Vector 1")
abline(c(0,1))
rep(c(0,5), 5)
library(impute)
scale(bidlog$award_localdn_var)
color()
colors()
pal <- colorRamp (c("red", "blue"))
pal(0)
pal(0.5)
pal(1)
image(1, color = pal(0.5))
image(1:10, color = pal(0.5))
image(as.matrix(1:10), color = pal(0.5))
image(as.matrix(1:10), colors = pal(0.5))
pal(0,1,len  = 10)
pal(seq(0,1,len  = 10))
pal <- colorRampPalette(c("red", "yellow"))
pal(3)
packages.install(RColorBrewer)
install.packages(RColorBrewer)
install.packages("RColorBrewer")
library (RColorBrewer)
cols <- brewer.pal(3, "PuRd")
cols <- brewer.pal(3, "PuRd")
pal <- colorRampPalette(cols)
image(volcano, col = pal(20))
cols <- brewer.pal(10, "PuRd")
pal <- colorRampPalette(cols)
image(volcano, col = pal(30))
x <- rnorm(1000)
y <- rnorm(1000)
smoothScatter(x,y)
smoothScatter(bidog$count_processing_days, bidlog$localdn_savings_rate)
smoothScatter(bidlog$count_processing_days, bidlog$localdn_savings_rate)
smoothScatter(log(bidlog$count_processing_days), log(bidlog$localdn_savings_rate))
smoothScatter(bidlog$localdn_savings_rate)
smoothScatter(bidlog$count_processing_days)
smoothScatter(bidlog$count_processing_days, -bidlog$localdn_savings_rate)
smoothScatter(bidlog$count_processing_days, -bidlog$localdn_savings_rate, xlim = c(0, 60), ylim = c(-1, 1))
smoothScatter(bidlog$count_processing_days, bidlog$localdn_savings_rate, xlim = c(0, 60), ylim = c(-1, 1))
smoothScatter(count_processing_days, localdn_savings_rate, data = bidlog xlim = c(0, 60), ylim = c(-1, 1))
smoothScatter(count_processing_days, localdn_savings_rate, data = bidlog, xlim = c(0, 60), ylim = c(-1, 1))
smoothScatter(bidlog$count_processing_days, bidlog$localdn_savings_rate, xlim = c(0, 60), ylim = c(-1, 1))
smoothScatter(bidlog$count_processing_days, bidlog$localdn_savings_rate, xlim = c(0, 60), ylim = c(-1, 1),  col = pal(30))
cols <- brewer.pal(5, "YlOrRd")
pal <- colorRampPalette(cols)
smoothScatter(bidlog$count_processing_days, bidlog$localdn_savings_rate, xlim = c(0, 60), ylim = c(-1, 1),  col = pal(30))
smoothScatter
smoothScatter(bidlog$count_processing_days, bidlog$localdn_savings_rate, xlim = c(0, 60), ylim = c(-1, 1),  colramp = pal(30))
smoothScatter(bidlog$count_processing_days, bidlog$localdn_savings_rate, xlim = c(0, 60), ylim = c(-1, 1),  colramp = pal(30))
smoothScatter(bidlog$count_processing_days, bidlog$localdn_savings_rate, xlim = c(0, 60), ylim = c(-1, 1),  colramp = 30)
smoothScatter(bidlog$count_processing_days, bidlog$localdn_savings_rate, xlim = c(0, 60), ylim = c(-1, 1),  colramp = pal)
plot(x, y, col = rgb(0,0,0,0.2), pch = 19)
install.packages("swirl")
library("swirl")
pm1999 <- read.table("\\wbad.group\dfs_WB\10_Home\UWBBENOELF\DATA\Desktop\pm25_data\pm25_data\RD_501_88101_1999-0.txt")
pm1999 <- read.table("\\\\wbad.group\\dfs_WB\\10_Home\\UWBBENOELF\\DATA\\Desktop\\pm25_data\\pm25_data\\RD_501_88101_1999-0.txt")
pm1999 <- read.table("\\\\wbad.group\\dfs_WB\\10_Home\\UWBBENOELF\\DATA\\Desktop\\pm25_data\\pm25_data\\RD_501_88101_1999-0.txt", comment.char = "#", header = FALSE, sep sep = "|", na.strings = "")
pm1999 <- read.table("\\\\wbad.group\\dfs_WB\\10_Home\\UWBBENOELF\\DATA\\Desktop\\pm25_data\\pm25_data\\RD_501_88101_1999-0.txt", comment.char = "#", header = FALSE, sep = "|", na.strings = "")
pm99 <- read.table("\\\\wbad.group\\dfs_WB\\10_Home\\UWBBENOELF\\DATA\\Desktop\\pm25_data\\pm25_data\\RD_501_88101_1999-0.txt", comment.char = "#", header = FALSE, sep = "|", na.strings = "")
dim(pm99)
dim(bidlog)
head(pm99)
cnames <- readLines("\\\\wbad.group\\dfs_WB\\10_Home\\UWBBENOELF\\DATA\\Desktop\\pm25_data\\pm25_data\\RD_501_88101_1999-0.txt",1)
cnames
cnames <- strplit(cnames, "|", fixed = TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm99) <- cnames[1]
head(pm99)
names(pm99) <- cnames[[1]]
head(pm99)
names(pm99) <- make.names(cnames[[1]]) # turns the fields into a valid name for a data frame
head(pm99)
pm0 <- read.table("\\\\wbad.group\\dfs_WB\\10_Home\\UWBBENOELF\\DATA\\Desktop\\pm25_data\\pm25_data\\RD_501_88101_1999-0.txt", comment.char = "#", header = FALSE, sep = "|", na.strings = "")
### check dimensions
dim(pm0)
head(pm0)
### read the column names
cnames <- readLines("\\\\wbad.group\\dfs_WB\\10_Home\\UWBBENOELF\\DATA\\Desktop\\pm25_data\\pm25_data\\RD_501_88101_1999-0.txt",1)
cnames <- strsplit(cnames, "|", fixed = TRUE)
names(pm0) <- make.names(cnames[[1]]) # turns the fields into a valid name for a data frame
x0 <- pm0$Sample.Value
class(x0) #check type
str(x0)
summary(x0)
mean(is.na(x0))
mean (c(TRUE, TRUE, TRUE))
mean (c(TRUE, FALSE, TRUE))
pm1 <- read.table("\\\\wbad.group\\dfs_WB\\10_Home\\UWBBENOELF\\DATA\\Desktop\\pm25_data\\pm25_data\\RD_501_88101_2012-0.txt", comment.char = "#", header = FALSE, sep = "|", na.strings = "")
dim(pm1)
head(pm1)
names(pm1) <- make.names(cnames[[1]]) # turns the fields into a valid name for a data frame
summary(pm1)
x1 <- pm1$Sample.Value
class(x1) #check type
str(x1)
summary(x1)
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
x1 < 0
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE) # proportion
date <- pm1$Date
str(date)
date <- as.Date(as.character(date), "%Y%m%d")
date <- as.Date(as.character(date), "%Y%m%d")
date
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
dates
hist(dates, "month")
hist(dates[negatives], "month")
hist(dates[negative], "month")
hist(dates, "month")
hist(dates[negative], "month")
site0 <- unique(subset(pm0, State.Code == 36, c(County.Code, Site.Id)))
site0 <- unique(subset(pm0, State.Code == 36, c(County.Code, Site.ID)))
site1 <- unique(subset(pm1, State.Code == 36, c(County.Code, Site.ID)))
site0 <- paste(site0[,1], site0[,2], sep = ".")
site0
site1
str(site0)
both <- intersect(site0, site1)
pm0$county.site <- with(pm0, paste(County.Code, Site.ID, sep = "."))
pm1$county.site <- with(pm1, paste(County.Code, Site.ID, sep = "."))
cnt1
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both) # first time using the %in% operator
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
cnt1
pm0$county.site <- with(pm0, paste(County.Code, Site.ID, sep = "."))
pm1$county.site <- with(pm1, paste(County.Code, Site.ID, sep = "."))
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both) # first time using the %in% operator
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
cnt1
both <- intersect(site0, site1)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both) # first time using the %in% operator
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
cnt1
both
intersect(site0, site1)
site0 <- unique(subset(pm0, State.Code == 36, c(County.Code, Site.ID)))
site1 <- unique(subset(pm1, State.Code == 36, c(County.Code, Site.ID)))
## create a single variable combining county and site id
site0 <- paste(site0[,1], site0[,2], sep = ".")
site1 <- paste(site1[,1], site1[,2], sep = ".")
both <- intersect(site0, site1)
both
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both) # first time using the %in% operator
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
cnt1
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm1sub <- subset (pm1, State.Code == 36 & County.Code == 63 & Site.ID == 2008)
pm0sub <- subset (pm0, State.Code == 36 & County.Code == 63 & Site.ID == 2008)
dim (pm1sub)
dim (pm0sub)
dates1 <- as.Date(as.character(pm1sub$Date))
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
str(dates1)
plot(dates1, s1sub)
plot(dates1, x1sub)
x1sub <- pm1sub$Sample.Value
plot(dates1, x1sub)
x0sub <- pm0sub$Sample.Value
plot(dates1, x0sub)
plot(dates0, x0sub)
par(mfrow = c(1, 2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(h = median (x0sub, na.rm = TRUE), ylim = c(0, 50))
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm=TRUE),  ylim = c(0, 50))
par(mfrow = c(1, 2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(h = median (x0sub, na.rm = TRUE), ylim = c(0, 50))
plot(dates1, x1sub, pch = 20, ylim = c(0, 50))
abline(h = median(x1sub, na.rm=TRUE),  )
par(mfrow = c(1, 2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20, ylim = c(0, 40))
abline(h = median (x0sub, na.rm = TRUE))
plot(dates1, x1sub, pch = 20, ylim = c(0, 40))
abline(h = median(x1sub, na.rm=TRUE)  )
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = T))
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = T))
summary(mn0)
summary(mn1)
str(mn0)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
head(d0)
mrg <- merge(d0, d1, by = "state")
head(mrg)
names(mrg) <- c("state", "1999", "2012")
par(mfrow = c(1,1)
)
c(1998, 2013)
names(mrg) <- c("state", "2012", "1999")
par(mfrow = c(1,1))
with(mrg, plot(rep(1999, 52), mrg[,2], xlim = c(1998, 2013)))
with(mrg, point(rep(2012, 52), mrg[,2]))
with(mrg, point(rep(2012, 52), mrg[,3]))
names(mrg) <- c("state", "1999", "2012")
with(mrg, points(rep(2012, 52), mrg[,3]))
segments(rep(1999, 52), mrg[,2], rep(2012, 52), mrg[,3])
mn0
plot(log10(bidlog$localdn_savings_rate), as.factor(bidlog$member))
plot(log10(bidlog$localdn_savings_rate), factor(bidlog$member))
factor(bidlog$member)
plot(factor(bidlog$member), log10(bidlog$localdn_savings_rate))
require(ggplot2)
library(ggplot2)
qplot(factor(bidlog$member),log10(bidlog$localdn_savings_rate))
qplot(factor(bidlog$reason),log10(bidlog$localdn_savings_rate))
q <-qplot(factor(bidlog$reason),log10(bidlog$localdn_savings_rate))
q + opts(axis.text.x=theme_text(angle=-90))
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
bidlog$localdn_savings_rate
negative <- bidlog$localdn_savings_rate < 0
mean(negative, na.rm = T)
q <-qplot(factor(bidlog$reason),bidlog$localdn_savings_rate)
q + opts(axis.text.x=theme_text(angle=-90))
q <-qplot(factor(bidlog$reason),bidlog$localdn_savings_rate)
q + opts(axis.text.x=theme_text(angle=-90))
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
q <-qplot(factor(bidlog$reason),log10(bidlog$localdn_savings_rate))
q + opts(axis.text.x=theme_text(angle=-90))
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
10^-2
q <-qplot(factor(bidlog$reason),log10(bidlog$localdn_savings_rate), alpha=I(0.1))
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
mldn <- with(bidlog, tapply(localdn_savings_rate, interaction(open_date_cy, reason), median, na.rm = T)
mldn <- with(bidlog, tapply(localdn_savings_rate, interaction(open_date_cy, reason), median, na.rm = T))
mldn <- with(bidlog, tapply(localdn_savings_rate, interaction(open_date_cy, reason), median, na.rm = T))
mldn
ml14 <- with(bidlog[bidlog$open_date_cy = 2014, ], tapply(localdn_savings_rate, reason, median, na.rm = T))
ml14 <- with(bidlog[bidlog$open_date_cy == 2014, ], tapply(localdn_savings_rate, reason, median, na.rm = T))
ml14
ml17 <- with(bidlog[bidlog$open_date_cy == 2017, ], tapply(localdn_savings_rate, reason, median, na.rm = T))
ml17
ml16
ml14 <- with(bidlog[bidlog$open_date_cy == 2014, ], tapply(localdn_savings_rate, reason, median, na.rm = T))
ml15 <- with(bidlog[bidlog$open_date_cy == 2015, ], tapply(localdn_savings_rate, reason, median, na.rm = T))
ml16 <- with(bidlog[bidlog$open_date_cy == 2016, ], tapply(localdn_savings_rate, reason, median, na.rm = T))
ml17 <- with(bidlog[bidlog$open_date_cy == 2017, ], tapply(localdn_savings_rate, reason, median, na.rm = T))
ml16
ml17
ml15
pd15 <- with(bidlog[bidlog$open_date_cy == 2015, ], tapply(count_processing_days, reason, median, na.rm = T))
pd16 <- with(bidlog[bidlog$open_date_cy == 2016, ], tapply(count_processing_days, reason, median, na.rm = T))
pd17 <- with(bidlog[bidlog$open_date_cy == 2017, ], tapply(count_processing_days, reason, median, na.rm = T))
pd17
ml17
competitive <- subset(bidlog, open_date_cy == 2017 & reason == "COMPETITIVE", localdn_savings_rate)
summary (competitive)
plot(ml15, pd15)
plot(pd15, ml15)
plot(pd15, ml15, pch = 19)
plot(pd15, ml15, pch = 19, alpha = 0.25)
plot(pd15, ml15, pch = 19, col = alpha(0.25))
plot(pd15, ml15, pch = 19, col = alpha("black",0.25))
plot(pd16, ml16, pch = 19, col = alpha("black",0.25))
plot(pd17, ml17, pch = 19, col = alpha("black",0.25))
par(mfrow = c(1,3))
plot(pd15, ml15, pch = 19, col = alpha("black",0.25))
plot(pd16, ml16, pch = 19, col = alpha("black",0.25))
plot(pd17, ml17, pch = 19, col = alpha("black",0.25))
par(mfrow = c(1,3))
plot(pd15, ml15, pch = 19, col = alpha("black",0.25), xlim = c(0,100),ylim=c(-0.2, 1))
plot(pd16, ml16, pch = 19, col = alpha("black",0.25), xlim = c(0,100),ylim=c(-0.2, 1))
plot(pd17, ml17, pch = 19, col = alpha("black",0.25), xlim = c(0,100),ylim=c(-0.2, 1))
bidlog_reduce <- subset(bidlog, reason %in% r_to_consider)
bidlog_reduce <- bidlog[bidlog$reason == r_to_consider,]
r_to_consider <- c("MINIBID", "COMPETITIVE", "LOE", "PRICE_INCREASE", "MINIBID_QUIET","NEW_OFFER")
bidlog_reduce <- bidlog[bidlog$reason == r_to_consider,]
subset(bidlog, reason %in% r_to_consider)
ml15 <- with(bidlog_reduce[bidlog$open_date_cy == 2015, ], tapply(localdn_savings_rate, reason, median, na.rm = T))
ml16 <- with(bidlog_reduce[bidlog$open_date_cy == 2016, ], tapply(localdn_savings_rate, reason, median, na.rm = T))
ml17 <- with(bidlog_reduce[bidlog$open_date_cy == 2017, ], tapply(localdn_savings_rate, reason, median, na.rm = T))
pd15 <- with(bidlog_reduce[bidlog$open_date_cy == 2015, ], tapply(count_processing_days, reason, median, na.rm = T))
pd16 <- with(bidlog_reduce[bidlog$open_date_cy == 2016, ], tapply(count_processing_days, reason, median, na.rm = T))
pd17 <- with(bidlog_reduce[bidlog$open_date_cy == 2017, ], tapply(count_processing_days, reason, median, na.rm = T))
par(mfrow = c(1,3))
plot(pd15, ml15, pch = 19, col = alpha("black",0.25), xlim = c(0,100),ylim=c(-0.2, 1))
plot(pd16, ml16, pch = 19, col = alpha("black",0.25), xlim = c(0,100),ylim=c(-0.2, 1))
plot(pd17, ml17, pch = 19, col = alpha("black",0.25), xlim = c(0,100),ylim=c(-0.2, 1))
par(mfrow = c(1,3))
plot(pd15, ml15, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1))
plot(pd16, ml16, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1))
plot(pd17, ml17, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1))
text(pd15, ml15, bidlog_reduce$reason)
text(pd15, ml15, names(ml15))
par(mfrow = c(1,3))
plot(pd15, ml15, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1))
text(pd15, ml15, names(ml15))
plot(pd16, ml16, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1))
plot(pd17, ml17, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1))
plot(pd15, ml15, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
par(mfrow = c(1,3))
plot(pd15, ml15, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
text(pd15, ml15, names(ml15))
plot(pd16, ml16, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
text(pd16, ml16,names(ml16))
plot(pd17, ml17, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
text(pd17, ml17,names(ml17))
par(mfrow = c(1,3))
plot(pd15, ml15, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
text(pd15, ml15, names(ml15))
abline(h = 0)
plot(pd16, ml16, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
text(pd16, ml16,names(ml16))
abline(h = 0)
plot(pd17, ml17, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
text(pd17, ml17,names(ml17))
abline(h = 0)
minibid <- subset(bidlog, open_date_cy == 2017 & reason == "MINIBID", localdn_savings_rate)
summary (minibid)
pd17
names(ml15)
par(mfrow = c(1,3))
plot(pd15, ml15, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
text(pd15, ml15, names(pd15))
abline(h = 0)
plot(pd16, ml16, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
text(pd16, ml16,names(pd16))
abline(h = 0)
plot(pd17, ml17, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
text(pd17, ml17,names(pd17))
abline(h = 0)
text(pd17, ml17,names(pd17))
plot(pd17, ml17, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
text(pd17, ml17,names(pd17))
text(pd17, ml17,laberl = names(pd17))
plot(pd17, ml17, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
text(pd17, ml17,labels = names(pd17))
summary (minibid)
minibid <- subset(bidlog, open_date_cy == 2017 & reason == "MINIBID", localdn_savings_rate)
summary (minibid)
plot(pd17, ml17, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
text(pd17, ml17,labels = names(pd17))
plot(pd17, ml17, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
text(pd17, ml17,labels = names(ml17))
plot(pd17, ml17, pch = 19, col = alpha("black",0.25), xlim = c(0,60),ylim=c(-0.2, 1), type = "n")
text(pd17, ml17,labels = names(ml17))
